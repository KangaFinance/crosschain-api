import { ACTION_TYPE, IAction, STATUS, TOKEN } from './interfaces';
import { IWeb3Client } from './blockchain/eth';
import { IHmyClient } from './blockchain/hmy';
import { IOperation } from './interfaces';
import { ValidatorsAPI } from './api';
export declare const waitAction: (api: ValidatorsAPI, operationId: string, actionType: ACTION_TYPE, maxTimeoutSec: number, prefix: string) => Promise<IAction>;
export declare const checkStatus: (operation: {
    status: STATUS;
}, prefix: string, actionName: string) => boolean;
export declare const getEthBalance: (web3Client: IWeb3Client, token: TOKEN, address: string, erc20?: string) => Promise<string | number>;
export declare const getOneBalance: (hmyClient: IHmyClient, web3Client: IWeb3Client, token: TOKEN, address: string, erc20?: string) => Promise<string | 0>;
export declare const logOperationParams: (operationParams: IOperation, prefix: string) => void;
export declare const getActionByType: (operation: IOperation, type: ACTION_TYPE) => IAction;
export declare const confirmCallback: (api: ValidatorsAPI, transactionHash: string, actionType: ACTION_TYPE, operationId: string) => Promise<void>;

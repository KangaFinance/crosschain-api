import { Harmony } from '@harmony-js/core';
import { Contract } from '@harmony-js/contract';
interface IHmyMethodsInitParams {
    hmy: Harmony;
    hmyTokenContract: Contract;
    hmyManagerContract: Contract;
    options?: {
        gasPrice: number;
        gasLimit: number;
    };
}
export declare class HmyMethods {
    hmy: Harmony;
    hmyTokenContract: Contract;
    hmyManagerContract: Contract;
    options: {
        gasPrice: number;
        gasLimit: number;
    };
    useOneWallet: boolean;
    useMathWallet: boolean;
    constructor(params: IHmyMethodsInitParams);
    setUseMetamask: (value: boolean) => boolean;
    setUseOneWallet: (value: boolean) => void;
    setUseMathWallet: (value: boolean) => void;
    approveHmyManger: (amount: number, sendTxCallback?: (hash: string) => void) => Promise<unknown>;
    burnToken: (userAddr: string, amount: number, sendTxCallback?: (hash: string) => void) => Promise<unknown>;
    checkHmyBalance: (addr: string) => Promise<any>;
    totalSupply: () => Promise<any>;
}
export {};

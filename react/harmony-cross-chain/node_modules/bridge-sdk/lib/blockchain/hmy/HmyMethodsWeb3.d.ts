import Web3 from 'web3';
import { Contract } from 'web3-eth-contract';
interface IHmyMethodsInitParams {
    hmy: Web3;
    hmyTokenContract: Contract;
    hmyManagerContract: Contract;
    hmyManagerContractAddress: string;
    options?: {
        gasPrice: number;
        gasLimit: number;
    };
}
export declare class HmyMethodsWeb3 {
    web3: Web3;
    hmyTokenContract: Contract;
    hmyManagerContract: Contract;
    hmyManagerContractAddress: string;
    useMetamask: boolean;
    constructor(params: IHmyMethodsInitParams);
    setUseOneWallet: (value: boolean) => boolean;
    setUseMathWallet: (value: boolean) => boolean;
    setUseMetamask: (value: boolean) => boolean;
    approveHmyManger: (amount: number, sendTxCallback?: (hash: string) => void) => Promise<any>;
    burnToken: (userAddr: string, amount: number, sendTxCallback?: (hash: string) => void) => Promise<any>;
    checkHmyBalance: (addr: string) => Promise<any>;
    totalSupply: () => Promise<any>;
}
export {};

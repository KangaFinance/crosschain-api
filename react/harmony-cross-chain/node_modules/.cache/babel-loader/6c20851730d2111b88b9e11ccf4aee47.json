{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.depositOne = void 0;\n\nconst interfaces_1 = require(\"../interfaces\");\n\nconst logs_1 = require(\"../utils/logs\");\n\nconst operation_helpers_1 = require(\"../operation-helpers\");\n\nexports.depositOne = async (api, operationParams, ethMethods, hmyMethods, prefix) => {\n  const operation = await api.getOperation(operationParams.id);\n  const depositAction = operation_helpers_1.getActionByType(operation, interfaces_1.ACTION_TYPE.depositOne);\n\n  if (depositAction && depositAction.status === interfaces_1.STATUS.WAITING) {\n    logs_1.logger.pending({\n      prefix,\n      message: 'depositOne'\n    });\n    const res = await hmyMethods.deposit(depositAction.depositAmount, hash => operation_helpers_1.confirmCallback(api, hash, depositAction.type, operation.id));\n    logs_1.logger.info({\n      prefix,\n      message: 'Status: ' + res.status\n    });\n    logs_1.logger.success({\n      prefix,\n      message: 'depositOne'\n    });\n  }\n\n  return true;\n};","map":{"version":3,"sources":["/Users/borispolania/Documents/GitHub/crosschain-api/react/harmony-cross-chain/node_modules/bridge-sdk/lib/operations/oneDeposit.js"],"names":["Object","defineProperty","exports","value","depositOne","interfaces_1","require","logs_1","operation_helpers_1","api","operationParams","ethMethods","hmyMethods","prefix","operation","getOperation","id","depositAction","getActionByType","ACTION_TYPE","status","STATUS","WAITING","logger","pending","message","res","deposit","depositAmount","hash","confirmCallback","type","info","success"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,UAAR,GAAqB,KAAK,CAA1B;;AACA,MAAMC,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA5B;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,eAAD,CAAtB;;AACA,MAAME,mBAAmB,GAAGF,OAAO,CAAC,sBAAD,CAAnC;;AACAJ,OAAO,CAACE,UAAR,GAAqB,OAAOK,GAAP,EAAYC,eAAZ,EAA6BC,UAA7B,EAAyCC,UAAzC,EAAqDC,MAArD,KAAgE;AACjF,QAAMC,SAAS,GAAG,MAAML,GAAG,CAACM,YAAJ,CAAiBL,eAAe,CAACM,EAAjC,CAAxB;AACA,QAAMC,aAAa,GAAGT,mBAAmB,CAACU,eAApB,CAAoCJ,SAApC,EAA+CT,YAAY,CAACc,WAAb,CAAyBf,UAAxE,CAAtB;;AACA,MAAIa,aAAa,IAAIA,aAAa,CAACG,MAAd,KAAyBf,YAAY,CAACgB,MAAb,CAAoBC,OAAlE,EAA2E;AACvEf,IAAAA,MAAM,CAACgB,MAAP,CAAcC,OAAd,CAAsB;AAAEX,MAAAA,MAAF;AAAUY,MAAAA,OAAO,EAAE;AAAnB,KAAtB;AACA,UAAMC,GAAG,GAAG,MAAMd,UAAU,CAACe,OAAX,CAAmBV,aAAa,CAACW,aAAjC,EAAiDC,IAAD,IAAUrB,mBAAmB,CAACsB,eAApB,CAAoCrB,GAApC,EAAyCoB,IAAzC,EAA+CZ,aAAa,CAACc,IAA7D,EAAmEjB,SAAS,CAACE,EAA7E,CAA1D,CAAlB;AACAT,IAAAA,MAAM,CAACgB,MAAP,CAAcS,IAAd,CAAmB;AAAEnB,MAAAA,MAAF;AAAUY,MAAAA,OAAO,EAAE,aAAaC,GAAG,CAACN;AAApC,KAAnB;AACAb,IAAAA,MAAM,CAACgB,MAAP,CAAcU,OAAd,CAAsB;AAAEpB,MAAAA,MAAF;AAAUY,MAAAA,OAAO,EAAE;AAAnB,KAAtB;AACH;;AACD,SAAO,IAAP;AACH,CAVD","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.depositOne = void 0;\nconst interfaces_1 = require(\"../interfaces\");\nconst logs_1 = require(\"../utils/logs\");\nconst operation_helpers_1 = require(\"../operation-helpers\");\nexports.depositOne = async (api, operationParams, ethMethods, hmyMethods, prefix) => {\n    const operation = await api.getOperation(operationParams.id);\n    const depositAction = operation_helpers_1.getActionByType(operation, interfaces_1.ACTION_TYPE.depositOne);\n    if (depositAction && depositAction.status === interfaces_1.STATUS.WAITING) {\n        logs_1.logger.pending({ prefix, message: 'depositOne' });\n        const res = await hmyMethods.deposit(depositAction.depositAmount, (hash) => operation_helpers_1.confirmCallback(api, hash, depositAction.type, operation.id));\n        logs_1.logger.info({ prefix, message: 'Status: ' + res.status });\n        logs_1.logger.success({ prefix, message: 'depositOne' });\n    }\n    return true;\n};\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-network\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Emitter = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar mitt_1 = tslib_1.__importDefault(require(\"mitt\"));\n\nvar Emitter = function () {\n  function Emitter() {\n    var _this = this;\n\n    this.handlers = {};\n    this.emitter = mitt_1.default(this.handlers);\n    this.off = this.emitter.off.bind(this);\n    this.emit = this.emitter.emit.bind(this); // tslint:disable-next-line: no-empty\n\n    this.promise = new Promise(function (resolve, reject) {\n      _this.resolve = resolve;\n      _this.reject = reject;\n    });\n    this.then = this.promise.then.bind(this.promise);\n  }\n\n  Emitter.prototype.resetHandlers = function () {\n    // tslint:disable-next-line: forin\n    for (var i in this.handlers) {\n      delete this.handlers[i];\n    }\n  };\n\n  Emitter.prototype.on = function (type, handler) {\n    this.emitter.on(type, handler);\n    return this;\n  };\n\n  Emitter.prototype.once = function (type, handler) {\n    var _this = this;\n\n    this.emitter.on(type, function (e) {\n      handler(e);\n\n      _this.removeEventListener(type);\n    });\n  };\n\n  Emitter.prototype.addEventListener = function (type, handler) {\n    this.emitter.on(type, handler);\n  };\n\n  Emitter.prototype.removeEventListener = function (type, handler) {\n    if (!type) {\n      this.handlers = {};\n      return;\n    }\n\n    if (!handler) {\n      delete this.handlers[type];\n    } else {\n      return this.emitter.off(type, handler);\n    }\n  };\n\n  Emitter.prototype.onError = function (error) {\n    this.emitter.on('error', error);\n    this.removeEventListener('*');\n  };\n\n  Emitter.prototype.onData = function (data) {\n    this.emitter.on('data', data);\n    this.removeEventListener('*');\n  };\n\n  Emitter.prototype.listenerCount = function (listenKey) {\n    var count = 0;\n    Object.keys(this.handlers).forEach(function (val) {\n      if (listenKey === val) {\n        count += 1;\n      }\n    });\n    return count;\n  };\n\n  return Emitter;\n}();\n\nexports.Emitter = Emitter;","map":{"version":3,"sources":["../../src/providers/emitter.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-network\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitter = void 0;\nvar tslib_1 = require(\"tslib\");\nvar mitt_1 = tslib_1.__importDefault(require(\"mitt\"));\nvar Emitter = /** @class */ (function () {\n    function Emitter() {\n        var _this = this;\n        this.handlers = {};\n        this.emitter = mitt_1.default(this.handlers);\n        this.off = this.emitter.off.bind(this);\n        this.emit = this.emitter.emit.bind(this);\n        // tslint:disable-next-line: no-empty\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n        this.then = this.promise.then.bind(this.promise);\n    }\n    Emitter.prototype.resetHandlers = function () {\n        // tslint:disable-next-line: forin\n        for (var i in this.handlers) {\n            delete this.handlers[i];\n        }\n    };\n    Emitter.prototype.on = function (type, handler) {\n        this.emitter.on(type, handler);\n        return this;\n    };\n    Emitter.prototype.once = function (type, handler) {\n        var _this = this;\n        this.emitter.on(type, function (e) {\n            handler(e);\n            _this.removeEventListener(type);\n        });\n    };\n    Emitter.prototype.addEventListener = function (type, handler) {\n        this.emitter.on(type, handler);\n    };\n    Emitter.prototype.removeEventListener = function (type, handler) {\n        if (!type) {\n            this.handlers = {};\n            return;\n        }\n        if (!handler) {\n            delete this.handlers[type];\n        }\n        else {\n            return this.emitter.off(type, handler);\n        }\n    };\n    Emitter.prototype.onError = function (error) {\n        this.emitter.on('error', error);\n        this.removeEventListener('*');\n    };\n    Emitter.prototype.onData = function (data) {\n        this.emitter.on('data', data);\n        this.removeEventListener('*');\n    };\n    Emitter.prototype.listenerCount = function (listenKey) {\n        var count = 0;\n        Object.keys(this.handlers).forEach(function (val) {\n            if (listenKey === val) {\n                count += 1;\n            }\n        });\n        return count;\n    };\n    return Emitter;\n}());\nexports.Emitter = Emitter;\n//# sourceMappingURL=emitter.js.map"]},"metadata":{},"sourceType":"script"}
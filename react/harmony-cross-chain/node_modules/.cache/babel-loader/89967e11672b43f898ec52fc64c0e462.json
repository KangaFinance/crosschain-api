{"ast":null,"code":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-staking\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StakingFactory = void 0;\n\nvar stakingTransaction_1 = require(\"./stakingTransaction\");\n\nvar utils_1 = require(\"@harmony-js/utils\");\n\nvar transaction_1 = require(\"@harmony-js/transaction\");\n\nvar StakingFactory = function () {\n  function StakingFactory(messenger) {\n    this.messenger = messenger;\n    this.nonce = 0;\n    this.gasPrice = new utils_1.Unit('100').asGwei().toHex();\n    this.gasLimit = new utils_1.Unit('210000').asWei().toHex();\n    this.chainId = 1;\n    this.signature = {\n      v: 0,\n      r: '',\n      s: ''\n    };\n  }\n\n  StakingFactory.prototype.createValidator = function (_a) {\n    var validatorAddress = _a.validatorAddress,\n        description = _a.description,\n        commissionRate = _a.commissionRate,\n        minSelfDelegation = _a.minSelfDelegation,\n        maxTotalDelegation = _a.maxTotalDelegation,\n        slotPubKeys = _a.slotPubKeys,\n        amount = _a.amount;\n    this.stakeMsg = new stakingTransaction_1.CreateValidator(validatorAddress, new stakingTransaction_1.Description(description.name, description.identity, description.website, description.securityContact, description.details), new stakingTransaction_1.CommissionRate(new stakingTransaction_1.Decimal(commissionRate.rate), new stakingTransaction_1.Decimal(commissionRate.maxRate), new stakingTransaction_1.Decimal(commissionRate.maxChangeRate)), minSelfDelegation, maxTotalDelegation, slotPubKeys, amount);\n    this.directive = stakingTransaction_1.Directive.DirectiveCreateValidator;\n    return this;\n  };\n\n  StakingFactory.prototype.editValidator = function (_a) {\n    var validatorAddress = _a.validatorAddress,\n        description = _a.description,\n        commissionRate = _a.commissionRate,\n        minSelfDelegation = _a.minSelfDelegation,\n        maxTotalDelegation = _a.maxTotalDelegation,\n        slotKeyToRemove = _a.slotKeyToRemove,\n        slotKeyToAdd = _a.slotKeyToAdd;\n    this.stakeMsg = new stakingTransaction_1.EditValidator(validatorAddress, new stakingTransaction_1.Description(description.name, description.identity, description.website, description.securityContact, description.details), new stakingTransaction_1.Decimal(commissionRate), minSelfDelegation, maxTotalDelegation, slotKeyToRemove, slotKeyToAdd);\n    this.directive = stakingTransaction_1.Directive.DirectiveEditValidator;\n    return this;\n  };\n\n  StakingFactory.prototype.delegate = function (_a) {\n    var delegatorAddress = _a.delegatorAddress,\n        validatorAddress = _a.validatorAddress,\n        amount = _a.amount;\n    this.stakeMsg = new stakingTransaction_1.Delegate(delegatorAddress, validatorAddress, amount);\n    this.directive = stakingTransaction_1.Directive.DirectiveDelegate;\n    return this;\n  };\n\n  StakingFactory.prototype.undelegate = function (_a) {\n    var delegatorAddress = _a.delegatorAddress,\n        validatorAddress = _a.validatorAddress,\n        amount = _a.amount;\n    this.stakeMsg = new stakingTransaction_1.Undelegate(delegatorAddress, validatorAddress, amount);\n    this.directive = stakingTransaction_1.Directive.DirectiveUndelegate;\n    return this;\n  };\n\n  StakingFactory.prototype.collectRewards = function (_a) {\n    var delegatorAddress = _a.delegatorAddress;\n    this.stakeMsg = new stakingTransaction_1.CollectRewards(delegatorAddress);\n    this.directive = stakingTransaction_1.Directive.DirectiveCollectRewards;\n    return this;\n  };\n\n  StakingFactory.prototype.setTxParams = function (_a) {\n    var nonce = _a.nonce,\n        gasPrice = _a.gasPrice,\n        gasLimit = _a.gasLimit,\n        chainId = _a.chainId,\n        signature = _a.signature;\n    this.nonce = nonce;\n    this.gasPrice = gasPrice;\n    this.gasLimit = gasLimit;\n    this.chainId = chainId;\n    this.signature = signature;\n    return this;\n  };\n\n  StakingFactory.prototype.build = function () {\n    if (this.directive === undefined) {\n      throw new Error('cannot build stakingTransaction without Directive');\n    }\n\n    if (this.stakeMsg === undefined) {\n      throw new Error('cannot build stakingTransaction without stakeMsg');\n    }\n\n    return new stakingTransaction_1.StakingTransaction(this.directive, this.stakeMsg, this.nonce !== undefined ? this.nonce : 0, this.gasPrice !== undefined ? this.gasPrice : new utils_1.Unit('100').asGwei().toHex(), this.gasLimit !== undefined ? this.gasLimit : new utils_1.Unit('210000').asWei().toHex(), this.chainId !== undefined ? this.chainId : 1, this.messenger, transaction_1.TxStatus.INTIALIZED);\n  };\n\n  StakingFactory.prototype.setMessenger = function (messenger) {\n    this.messenger = messenger;\n  };\n\n  return StakingFactory;\n}();\n\nexports.StakingFactory = StakingFactory;","map":{"version":3,"sources":["../src/factory.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-staking\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StakingFactory = void 0;\nvar stakingTransaction_1 = require(\"./stakingTransaction\");\nvar utils_1 = require(\"@harmony-js/utils\");\nvar transaction_1 = require(\"@harmony-js/transaction\");\nvar StakingFactory = /** @class */ (function () {\n    function StakingFactory(messenger) {\n        this.messenger = messenger;\n        this.nonce = 0;\n        this.gasPrice = new utils_1.Unit('100').asGwei().toHex();\n        this.gasLimit = new utils_1.Unit('210000').asWei().toHex();\n        this.chainId = 1;\n        this.signature = {\n            v: 0,\n            r: '',\n            s: '',\n        };\n    }\n    StakingFactory.prototype.createValidator = function (_a) {\n        var validatorAddress = _a.validatorAddress, description = _a.description, commissionRate = _a.commissionRate, minSelfDelegation = _a.minSelfDelegation, maxTotalDelegation = _a.maxTotalDelegation, slotPubKeys = _a.slotPubKeys, amount = _a.amount;\n        this.stakeMsg = new stakingTransaction_1.CreateValidator(validatorAddress, new stakingTransaction_1.Description(description.name, description.identity, description.website, description.securityContact, description.details), new stakingTransaction_1.CommissionRate(new stakingTransaction_1.Decimal(commissionRate.rate), new stakingTransaction_1.Decimal(commissionRate.maxRate), new stakingTransaction_1.Decimal(commissionRate.maxChangeRate)), minSelfDelegation, maxTotalDelegation, slotPubKeys, amount);\n        this.directive = stakingTransaction_1.Directive.DirectiveCreateValidator;\n        return this;\n    };\n    StakingFactory.prototype.editValidator = function (_a) {\n        var validatorAddress = _a.validatorAddress, description = _a.description, commissionRate = _a.commissionRate, minSelfDelegation = _a.minSelfDelegation, maxTotalDelegation = _a.maxTotalDelegation, slotKeyToRemove = _a.slotKeyToRemove, slotKeyToAdd = _a.slotKeyToAdd;\n        this.stakeMsg = new stakingTransaction_1.EditValidator(validatorAddress, new stakingTransaction_1.Description(description.name, description.identity, description.website, description.securityContact, description.details), new stakingTransaction_1.Decimal(commissionRate), minSelfDelegation, maxTotalDelegation, slotKeyToRemove, slotKeyToAdd);\n        this.directive = stakingTransaction_1.Directive.DirectiveEditValidator;\n        return this;\n    };\n    StakingFactory.prototype.delegate = function (_a) {\n        var delegatorAddress = _a.delegatorAddress, validatorAddress = _a.validatorAddress, amount = _a.amount;\n        this.stakeMsg = new stakingTransaction_1.Delegate(delegatorAddress, validatorAddress, amount);\n        this.directive = stakingTransaction_1.Directive.DirectiveDelegate;\n        return this;\n    };\n    StakingFactory.prototype.undelegate = function (_a) {\n        var delegatorAddress = _a.delegatorAddress, validatorAddress = _a.validatorAddress, amount = _a.amount;\n        this.stakeMsg = new stakingTransaction_1.Undelegate(delegatorAddress, validatorAddress, amount);\n        this.directive = stakingTransaction_1.Directive.DirectiveUndelegate;\n        return this;\n    };\n    StakingFactory.prototype.collectRewards = function (_a) {\n        var delegatorAddress = _a.delegatorAddress;\n        this.stakeMsg = new stakingTransaction_1.CollectRewards(delegatorAddress);\n        this.directive = stakingTransaction_1.Directive.DirectiveCollectRewards;\n        return this;\n    };\n    StakingFactory.prototype.setTxParams = function (_a) {\n        var nonce = _a.nonce, gasPrice = _a.gasPrice, gasLimit = _a.gasLimit, chainId = _a.chainId, signature = _a.signature;\n        this.nonce = nonce;\n        this.gasPrice = gasPrice;\n        this.gasLimit = gasLimit;\n        this.chainId = chainId;\n        this.signature = signature;\n        return this;\n    };\n    StakingFactory.prototype.build = function () {\n        if (this.directive === undefined) {\n            throw new Error('cannot build stakingTransaction without Directive');\n        }\n        if (this.stakeMsg === undefined) {\n            throw new Error('cannot build stakingTransaction without stakeMsg');\n        }\n        return new stakingTransaction_1.StakingTransaction(this.directive, this.stakeMsg, this.nonce !== undefined ? this.nonce : 0, this.gasPrice !== undefined ? this.gasPrice : new utils_1.Unit('100').asGwei().toHex(), this.gasLimit !== undefined ? this.gasLimit : new utils_1.Unit('210000').asWei().toHex(), this.chainId !== undefined ? this.chainId : 1, this.messenger, transaction_1.TxStatus.INTIALIZED);\n    };\n    StakingFactory.prototype.setMessenger = function (messenger) {\n        this.messenger = messenger;\n    };\n    return StakingFactory;\n}());\nexports.StakingFactory = StakingFactory;\n//# sourceMappingURL=factory.js.map"]},"metadata":{},"sourceType":"script"}
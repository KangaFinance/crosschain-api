{"ast":null,"code":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-network\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NewHeaders = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar Subscription_1 = require(\"./Subscription\");\n/**\n * ### Description:\n * Subscribes to incoming block headers. This can be used as timer to check for changes on the blockchain.\n */\n\n\nvar NewHeaders = function (_super) {\n  tslib_1.__extends(NewHeaders, _super);\n\n  function NewHeaders(messenger, shardID) {\n    if (shardID === void 0) {\n      shardID = 0;\n    }\n\n    var _this = _super.call(this, 'newHeads', undefined, messenger, shardID) || this;\n\n    _this.start();\n\n    return _this;\n  }\n\n  return NewHeaders;\n}(Subscription_1.SubscriptionMethod);\n\nexports.NewHeaders = NewHeaders;","map":{"version":3,"sources":["../../src/subscriptions/NewHeadersSub.ts"],"names":[],"mappings":";AAAA;;;AAGG;;;;;;;;;AAGH,IAAA,cAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;AAEA;;;AAGG;;;AACH,IAAA,UAAA,GAAA,UAAA,MAAA,EAAA;AAAgC,EAAA,OAAA,CAAA,SAAA,CAAA,UAAA,EAAA,MAAA;;AAC9B,WAAA,UAAA,CAAY,SAAZ,EAAkC,OAAlC,EAAqD;AAAnB,QAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,OAAA,GAAA,CAAA;AAAmB;;AAArD,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,UAAN,EAAkB,SAAlB,EAA6B,SAA7B,EAAwC,OAAxC,KAAgD,IADlD;;AAEE,IAAA,KAAI,CAAC,KAAL;;;AACD;;AACH,SAAA,UAAA;AAAC,CALD,CAAgC,cAAA,CAAA,kBAAhC,CAAA;;AAAa,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-network\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NewHeaders = void 0;\nvar tslib_1 = require(\"tslib\");\nvar Subscription_1 = require(\"./Subscription\");\n/**\n * ### Description:\n * Subscribes to incoming block headers. This can be used as timer to check for changes on the blockchain.\n */\nvar NewHeaders = /** @class */ (function (_super) {\n    tslib_1.__extends(NewHeaders, _super);\n    function NewHeaders(messenger, shardID) {\n        if (shardID === void 0) { shardID = 0; }\n        var _this = _super.call(this, 'newHeads', undefined, messenger, shardID) || this;\n        _this.start();\n        return _this;\n    }\n    return NewHeaders;\n}(Subscription_1.SubscriptionMethod));\nexports.NewHeaders = NewHeaders;\n//# sourceMappingURL=NewHeadersSub.js.map"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-network\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LogSub = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar Subscription_1 = require(\"./Subscription\");\n\nvar rpc_1 = require(\"../rpcMethod/rpc\");\n\nvar LogSub = function (_super) {\n  tslib_1.__extends(LogSub, _super);\n\n  function LogSub(options, messenger, shardID) {\n    if (shardID === void 0) {\n      shardID = 0;\n    }\n\n    var _this = _super.call(this, 'logs', options, messenger, shardID) || this;\n\n    _this.preprocess();\n\n    return _this;\n  }\n\n  LogSub.prototype.preprocess = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var getPastLogs, logs, error_1;\n\n      var _this = this;\n\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(this.options.fromBlock && this.options.fromBlock !== 'latest' || this.options.fromBlock === 0 || this.options.fromBlock === '0x')) return [3\n            /*break*/\n            , 4];\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.messenger.send(rpc_1.RPCMethod.GetPastLogs, tslib_1.__spread(this.options), this.messenger.chainType, this.shardID)];\n\n          case 2:\n            getPastLogs = _a.sent();\n\n            if (getPastLogs.isError()) {\n              this.emitter.emit('error', getPastLogs.error.message);\n            } else {\n              logs = getPastLogs.result;\n              logs.forEach(function (log) {\n                var formattedLog = _this.onNewSubscriptionItem(log);\n\n                _this.emitter.emit('data', formattedLog);\n              });\n            }\n\n            delete this.options.fromBlock; // const sub = this.start();\n\n            return [2\n            /*return*/\n            , this.start()];\n\n          case 3:\n            error_1 = _a.sent();\n            this.emitter.emit('error', error_1);\n            throw error_1;\n\n          case 4:\n            return [2\n            /*return*/\n            , this.start()];\n        }\n      });\n    });\n  };\n\n  LogSub.prototype.onNewSubscriptionItem = function (subscriptionItem) {\n    // todo log formatter\n    var log = subscriptionItem;\n\n    if (log.removed) {\n      this.emitter.emit('changed', log);\n    }\n\n    return log;\n  };\n\n  return LogSub;\n}(Subscription_1.SubscriptionMethod);\n\nexports.LogSub = LogSub;","map":{"version":3,"sources":["../../src/subscriptions/LogSub.ts"],"names":[],"mappings":";AAAA;;;AAGG;;;;;;;;;AAGH,IAAA,cAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AACA,IAAA,KAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AAEA,IAAA,MAAA,GAAA,UAAA,MAAA,EAAA;AAA4B,EAAA,OAAA,CAAA,SAAA,CAAA,MAAA,EAAA,MAAA;;AAC1B,WAAA,MAAA,CAAY,OAAZ,EAA0B,SAA1B,EAAgD,OAAhD,EAAmE;AAAnB,QAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,OAAA,GAAA,CAAA;AAAmB;;AAAnE,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,MAAN,EAAc,OAAd,EAAuB,SAAvB,EAAkC,OAAlC,KAA0C,IAD5C;;AAEE,IAAA,KAAI,CAAC,UAAL;;;AACD;;AAEK,EAAA,MAAA,CAAA,SAAA,CAAA,UAAA,GAAN,YAAA;;;;;;;;;gBAEI,EAAC,KAAK,OAAL,CAAa,SAAb,IAA0B,KAAK,OAAL,CAAa,SAAb,KAA2B,QAAtD,IACA,KAAK,OAAL,CAAa,SAAb,KAA2B,CAD3B,IAEA,KAAK,OAAL,CAAa,SAAb,KAA2B,IAF3B,C,EAAA,OAAA,CAAA;AAAA;AAAA,cAAA,CAAA,CAAA;;;;;;AAKsB,mBAAA,CAAA;AAAA;AAAA,cAAM,KAAK,SAAL,CAAe,IAAf,CACxB,KAAA,CAAA,SAAA,CAAU,WADc,EACH,OAAA,CAAA,QAAA,CACjB,KAAK,OADY,CADG,EAGxB,KAAK,SAAL,CAAe,SAHS,EAIxB,KAAK,OAJmB,CAAN,CAAA;;;AAAd,YAAA,WAAW,GAAG,EAAA,CAAA,IAAA,EAAd;;AAON,gBAAI,WAAW,CAAC,OAAZ,EAAJ,EAA2B;AACzB,mBAAK,OAAL,CAAa,IAAb,CAAkB,OAAlB,EAA2B,WAAW,CAAC,KAAZ,CAAkB,OAA7C;AACD,aAFD,MAEO;AACC,cAAA,IAAI,GAAG,WAAW,CAAC,MAAnB;AACN,cAAA,IAAI,CAAC,OAAL,CAAa,UAAC,GAAD,EAAS;AACpB,oBAAM,YAAY,GAAG,KAAI,CAAC,qBAAL,CAA2B,GAA3B,CAArB;;AACA,gBAAA,KAAI,CAAC,OAAL,CAAa,IAAb,CAAkB,MAAlB,EAA0B,YAA1B;AACD,eAHD;AAID;;AACD,mBAAO,KAAK,OAAL,CAAa,SAApB,C,CACA;;AACA,mBAAA,CAAA;AAAA;AAAA,cAAO,KAAK,KAAL,EAAP,CAAA;;;;AAEA,iBAAK,OAAL,CAAa,IAAb,CAAkB,OAAlB,EAA2B,OAA3B;AACA,kBAAM,OAAN;;;AAGJ,mBAAA,CAAA;AAAA;AAAA,cAAO,KAAK,KAAL,EAAP,CAAA;;;;AACD,GAhCK;;AAkCN,EAAA,MAAA,CAAA,SAAA,CAAA,qBAAA,GAAA,UAAsB,gBAAtB,EAA2C;AACzC;AACA,QAAM,GAAG,GAAG,gBAAZ;;AAEA,QAAI,GAAG,CAAC,OAAR,EAAiB;AACf,WAAK,OAAL,CAAa,IAAb,CAAkB,SAAlB,EAA6B,GAA7B;AACD;;AAED,WAAO,GAAP;AACD,GATD;;AAWF,SAAA,MAAA;AAAC,CAnDD,CAA4B,cAAA,CAAA,kBAA5B,CAAA;;AAAa,OAAA,CAAA,MAAA,GAAA,MAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-network\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogSub = void 0;\nvar tslib_1 = require(\"tslib\");\nvar Subscription_1 = require(\"./Subscription\");\nvar rpc_1 = require(\"../rpcMethod/rpc\");\nvar LogSub = /** @class */ (function (_super) {\n    tslib_1.__extends(LogSub, _super);\n    function LogSub(options, messenger, shardID) {\n        if (shardID === void 0) { shardID = 0; }\n        var _this = _super.call(this, 'logs', options, messenger, shardID) || this;\n        _this.preprocess();\n        return _this;\n    }\n    LogSub.prototype.preprocess = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var getPastLogs, logs, error_1;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!((this.options.fromBlock && this.options.fromBlock !== 'latest') ||\n                            this.options.fromBlock === 0 ||\n                            this.options.fromBlock === '0x')) return [3 /*break*/, 4];\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.messenger.send(rpc_1.RPCMethod.GetPastLogs, tslib_1.__spread(this.options), this.messenger.chainType, this.shardID)];\n                    case 2:\n                        getPastLogs = _a.sent();\n                        if (getPastLogs.isError()) {\n                            this.emitter.emit('error', getPastLogs.error.message);\n                        }\n                        else {\n                            logs = getPastLogs.result;\n                            logs.forEach(function (log) {\n                                var formattedLog = _this.onNewSubscriptionItem(log);\n                                _this.emitter.emit('data', formattedLog);\n                            });\n                        }\n                        delete this.options.fromBlock;\n                        // const sub = this.start();\n                        return [2 /*return*/, this.start()];\n                    case 3:\n                        error_1 = _a.sent();\n                        this.emitter.emit('error', error_1);\n                        throw error_1;\n                    case 4: return [2 /*return*/, this.start()];\n                }\n            });\n        });\n    };\n    LogSub.prototype.onNewSubscriptionItem = function (subscriptionItem) {\n        // todo log formatter\n        var log = subscriptionItem;\n        if (log.removed) {\n            this.emitter.emit('changed', log);\n        }\n        return log;\n    };\n    return LogSub;\n}(Subscription_1.SubscriptionMethod));\nexports.LogSub = LogSub;\n//# sourceMappingURL=LogSub.js.map"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-crypto\n * @hidden\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decode = exports.encode = void 0; // this file is ported from https://github.com/ethers-io/ethers.js/blob/master/src.ts/utils/rlp.ts\n// and done some fixes\n\nvar bytes_1 = require(\"./bytes\");\n\nfunction arrayifyInteger(value) {\n  var result = [];\n\n  while (value) {\n    result.unshift(value & 0xff);\n    value >>= 8;\n  }\n\n  return result;\n}\n\nfunction unarrayifyInteger(data, offset, length) {\n  var result = 0;\n\n  for (var i = 0; i < length; i++) {\n    result = result * 256 + data[offset + i];\n  }\n\n  return result;\n}\n\nfunction _encode(object) {\n  if (Array.isArray(object)) {\n    var payload_1 = [];\n    object.forEach(function (child) {\n      payload_1 = payload_1.concat(_encode(child));\n    });\n\n    if (payload_1.length <= 55) {\n      payload_1.unshift(0xc0 + payload_1.length);\n      return payload_1;\n    } // tslint:disable-next-line: no-shadowed-variable\n\n\n    var length_1 = arrayifyInteger(payload_1.length);\n    length_1.unshift(0xf7 + length_1.length);\n    return length_1.concat(payload_1);\n  }\n\n  var data = Array.prototype.slice.call(bytes_1.arrayify(object));\n\n  if (data.length === 1 && data[0] <= 0x7f) {\n    return data;\n  } else if (data.length <= 55) {\n    data.unshift(0x80 + data.length);\n    return data;\n  }\n\n  var length = arrayifyInteger(data.length);\n  length.unshift(0xb7 + length.length);\n  return length.concat(data);\n}\n\nfunction encode(object) {\n  return bytes_1.hexlify(_encode(object));\n}\n\nexports.encode = encode;\n\nfunction _decodeChildren(data, offset, childOffset, length) {\n  var result = [];\n\n  while (childOffset < offset + 1 + length) {\n    var decoded = _decode(data, childOffset);\n\n    result.push(decoded.result);\n    childOffset += decoded.consumed;\n\n    if (childOffset > offset + 1 + length) {\n      throw new Error('invalid rlp');\n    }\n  }\n\n  return {\n    consumed: 1 + length,\n    result: result\n  };\n} // returns { consumed: number, result: Object }\n\n\nfunction _decode(data, offset) {\n  if (data.length === 0) {\n    throw new Error('invalid rlp data');\n  } // Array with extra length prefix\n\n\n  if (data[offset] >= 0xf8) {\n    var lengthLength = data[offset] - 0xf7;\n\n    if (offset + 1 + lengthLength > data.length) {\n      throw new Error('too short');\n    }\n\n    var length_2 = unarrayifyInteger(data, offset + 1, lengthLength);\n\n    if (offset + 1 + lengthLength + length_2 > data.length) {\n      throw new Error('to short');\n    }\n\n    return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length_2);\n  } else if (data[offset] >= 0xc0) {\n    var length_3 = data[offset] - 0xc0;\n\n    if (offset + 1 + length_3 > data.length) {\n      throw new Error('invalid rlp data');\n    }\n\n    return _decodeChildren(data, offset, offset + 1, length_3);\n  } else if (data[offset] >= 0xb8) {\n    var lengthLength = data[offset] - 0xb7;\n\n    if (offset + 1 + lengthLength > data.length) {\n      throw new Error('invalid rlp data');\n    }\n\n    var length_4 = unarrayifyInteger(data, offset + 1, lengthLength);\n\n    if (offset + 1 + lengthLength + length_4 > data.length) {\n      throw new Error('invalid rlp data');\n    }\n\n    var result = bytes_1.hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length_4));\n    return {\n      consumed: 1 + lengthLength + length_4,\n      result: result\n    };\n  } else if (data[offset] >= 0x80) {\n    var length_5 = data[offset] - 0x80;\n\n    if (offset + 1 + length_5 > data.length) {\n      throw new Error('invlaid rlp data');\n    }\n\n    var result = bytes_1.hexlify(data.slice(offset + 1, offset + 1 + length_5));\n    return {\n      consumed: 1 + length_5,\n      result: result\n    };\n  }\n\n  return {\n    consumed: 1,\n    result: bytes_1.hexlify(data[offset])\n  };\n}\n\nfunction decode(data) {\n  var bytes = bytes_1.arrayify(data) || new Uint8Array();\n\n  var decoded = _decode(bytes, 0);\n\n  if (decoded.consumed !== bytes.length) {\n    throw new Error('invalid rlp data');\n  }\n\n  return decoded.result;\n}\n\nexports.decode = decode;","map":{"version":3,"sources":["../src/rlp.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-crypto\n * @hidden\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encode = void 0;\n// this file is ported from https://github.com/ethers-io/ethers.js/blob/master/src.ts/utils/rlp.ts\n// and done some fixes\nvar bytes_1 = require(\"./bytes\");\nfunction arrayifyInteger(value) {\n    var result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\nfunction unarrayifyInteger(data, offset, length) {\n    var result = 0;\n    for (var i = 0; i < length; i++) {\n        result = result * 256 + data[offset + i];\n    }\n    return result;\n}\nfunction _encode(object) {\n    if (Array.isArray(object)) {\n        var payload_1 = [];\n        object.forEach(function (child) {\n            payload_1 = payload_1.concat(_encode(child));\n        });\n        if (payload_1.length <= 55) {\n            payload_1.unshift(0xc0 + payload_1.length);\n            return payload_1;\n        }\n        // tslint:disable-next-line: no-shadowed-variable\n        var length_1 = arrayifyInteger(payload_1.length);\n        length_1.unshift(0xf7 + length_1.length);\n        return length_1.concat(payload_1);\n    }\n    var data = Array.prototype.slice.call(bytes_1.arrayify(object));\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n    }\n    else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n    var length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n    return length.concat(data);\n}\nfunction encode(object) {\n    return bytes_1.hexlify(_encode(object));\n}\nexports.encode = encode;\nfunction _decodeChildren(data, offset, childOffset, length) {\n    var result = [];\n    while (childOffset < offset + 1 + length) {\n        var decoded = _decode(data, childOffset);\n        result.push(decoded.result);\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            throw new Error('invalid rlp');\n        }\n    }\n    return { consumed: 1 + length, result: result };\n}\n// returns { consumed: number, result: Object }\nfunction _decode(data, offset) {\n    if (data.length === 0) {\n        throw new Error('invalid rlp data');\n    }\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        var lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            throw new Error('too short');\n        }\n        var length_2 = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length_2 > data.length) {\n            throw new Error('to short');\n        }\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length_2);\n    }\n    else if (data[offset] >= 0xc0) {\n        var length_3 = data[offset] - 0xc0;\n        if (offset + 1 + length_3 > data.length) {\n            throw new Error('invalid rlp data');\n        }\n        return _decodeChildren(data, offset, offset + 1, length_3);\n    }\n    else if (data[offset] >= 0xb8) {\n        var lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            throw new Error('invalid rlp data');\n        }\n        var length_4 = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length_4 > data.length) {\n            throw new Error('invalid rlp data');\n        }\n        var result = bytes_1.hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length_4));\n        return { consumed: 1 + lengthLength + length_4, result: result };\n    }\n    else if (data[offset] >= 0x80) {\n        var length_5 = data[offset] - 0x80;\n        if (offset + 1 + length_5 > data.length) {\n            throw new Error('invlaid rlp data');\n        }\n        var result = bytes_1.hexlify(data.slice(offset + 1, offset + 1 + length_5));\n        return { consumed: 1 + length_5, result: result };\n    }\n    return { consumed: 1, result: bytes_1.hexlify(data[offset]) };\n}\nfunction decode(data) {\n    var bytes = bytes_1.arrayify(data) || new Uint8Array();\n    var decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        throw new Error('invalid rlp data');\n    }\n    return decoded.result;\n}\nexports.decode = decode;\n//# sourceMappingURL=rlp.js.map"]},"metadata":{},"sourceType":"script"}
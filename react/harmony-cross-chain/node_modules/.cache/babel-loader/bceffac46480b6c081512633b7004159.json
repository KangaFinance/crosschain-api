{"ast":null,"code":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-network\n * @hidden\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ResponseMiddleware = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar utils_1 = require(\"@harmony-js/utils\");\n/**\n * @class ResponseMiddleware\n * @description Response middleware of RPC\n * @param  {Object}  ResponseBody - response from rpc\n * @return {ResponseMiddleware} response middleware instance\n */\n\n\nvar ResponseMiddleware = function () {\n  function ResponseMiddleware(ResponseBody) {\n    this.result = ResponseBody.result;\n    this.error = ResponseBody.error;\n    this.raw = ResponseBody;\n    this.responseType = this.getResponseType();\n  }\n\n  Object.defineProperty(ResponseMiddleware.prototype, \"getResult\", {\n    get: function () {\n      return utils_1.isObject(this.result) ? tslib_1.__assign(tslib_1.__assign({}, this.result), {\n        responseType: 'result'\n      }) : this.result;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ResponseMiddleware.prototype, \"getError\", {\n    get: function () {\n      return utils_1.isObject(this.error) ? tslib_1.__assign(tslib_1.__assign({}, this.error), {\n        responseType: 'error'\n      }) : this.error;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ResponseMiddleware.prototype, \"getRaw\", {\n    get: function () {\n      return tslib_1.__assign(tslib_1.__assign({}, this.raw), {\n        responseType: 'raw'\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ResponseMiddleware.prototype.getResponseType = function () {\n    if (this.error) {\n      return 'error';\n    } else if (this.result || this.result === null && this.result !== undefined) {\n      return 'result';\n    } else {\n      return 'raw';\n    }\n  };\n\n  ResponseMiddleware.prototype.isError = function () {\n    return this.responseType === 'error';\n  };\n\n  ResponseMiddleware.prototype.isResult = function () {\n    return this.responseType === 'result';\n  };\n\n  ResponseMiddleware.prototype.isRaw = function () {\n    return this.responseType === 'raw';\n  };\n\n  return ResponseMiddleware;\n}();\n\nexports.ResponseMiddleware = ResponseMiddleware;","map":{"version":3,"sources":["../../src/messenger/responseMiddleware.ts"],"names":[],"mappings":";AAAA;;;;AAIG;;;;;;;;;AAGH,IAAA,OAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;AACA;;;;;AAKG;;;AACH,IAAA,kBAAA,GAAA,YAAA;AAKE,WAAA,kBAAA,CAAY,YAAZ,EAAmD;AACjD,SAAK,MAAL,GAAc,YAAY,CAAC,MAA3B;AACA,SAAK,KAAL,GAAa,YAAY,CAAC,KAA1B;AACA,SAAK,GAAL,GAAW,YAAX;AACA,SAAK,YAAL,GAAoB,KAAK,eAAL,EAApB;AACD;;AAED,EAAA,MAAA,CAAA,cAAA,CAAI,kBAAA,CAAA,SAAJ,EAAI,WAAJ,EAAa;SAAb,YAAA;AACE,aAAO,OAAA,CAAA,QAAA,CAAS,KAAK,MAAd,IAAuB,OAAA,CAAA,QAAA,CAAA,OAAA,CAAA,QAAA,CAAA,EAAA,EAAM,KAAK,MAAX,CAAA,EAAiB;AAAE,QAAA,YAAY,EAAE;AAAhB,OAAjB,CAAvB,GAAqE,KAAK,MAAjF;AACD,KAFY;qBAAA;;AAAA,GAAb;AAIA,EAAA,MAAA,CAAA,cAAA,CAAI,kBAAA,CAAA,SAAJ,EAAI,UAAJ,EAAY;SAAZ,YAAA;AACE,aAAO,OAAA,CAAA,QAAA,CAAS,KAAK,KAAd,IAAsB,OAAA,CAAA,QAAA,CAAA,OAAA,CAAA,QAAA,CAAA,EAAA,EAAM,KAAK,KAAX,CAAA,EAAgB;AAAE,QAAA,YAAY,EAAE;AAAhB,OAAhB,CAAtB,GAAkE,KAAK,KAA9E;AACD,KAFW;qBAAA;;AAAA,GAAZ;AAIA,EAAA,MAAA,CAAA,cAAA,CAAI,kBAAA,CAAA,SAAJ,EAAI,QAAJ,EAAU;SAAV,YAAA;AACE,aAAA,OAAA,CAAA,QAAA,CAAA,OAAA,CAAA,QAAA,CAAA,EAAA,EAAY,KAAK,GAAjB,CAAA,EAAoB;AAAE,QAAA,YAAY,EAAE;AAAhB,OAApB,CAAA;AACD,KAFS;qBAAA;;AAAA,GAAV;;AAIA,EAAA,kBAAA,CAAA,SAAA,CAAA,eAAA,GAAA,YAAA;AACE,QAAI,KAAK,KAAT,EAAgB;AACd,aAAO,OAAP;AACD,KAFD,MAEO,IAAI,KAAK,MAAL,IAAgB,KAAK,MAAL,KAAgB,IAAhB,IAAwB,KAAK,MAAL,KAAgB,SAA5D,EAAwE;AAC7E,aAAO,QAAP;AACD,KAFM,MAEA;AACL,aAAO,KAAP;AACD;AACF,GARD;;AAUA,EAAA,kBAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACE,WAAO,KAAK,YAAL,KAAsB,OAA7B;AACD,GAFD;;AAGA,EAAA,kBAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACE,WAAO,KAAK,YAAL,KAAsB,QAA7B;AACD,GAFD;;AAGA,EAAA,kBAAA,CAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AACE,WAAO,KAAK,YAAL,KAAsB,KAA7B;AACD,GAFD;;AAGF,SAAA,kBAAA;AAAC,CA3CD,EAAA;;AA4CS,OAAA,CAAA,kBAAA,GAAA,kBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-network\n * @hidden\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResponseMiddleware = void 0;\nvar tslib_1 = require(\"tslib\");\nvar utils_1 = require(\"@harmony-js/utils\");\n/**\n * @class ResponseMiddleware\n * @description Response middleware of RPC\n * @param  {Object}  ResponseBody - response from rpc\n * @return {ResponseMiddleware} response middleware instance\n */\nvar ResponseMiddleware = /** @class */ (function () {\n    function ResponseMiddleware(ResponseBody) {\n        this.result = ResponseBody.result;\n        this.error = ResponseBody.error;\n        this.raw = ResponseBody;\n        this.responseType = this.getResponseType();\n    }\n    Object.defineProperty(ResponseMiddleware.prototype, \"getResult\", {\n        get: function () {\n            return utils_1.isObject(this.result) ? tslib_1.__assign(tslib_1.__assign({}, this.result), { responseType: 'result' }) : this.result;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ResponseMiddleware.prototype, \"getError\", {\n        get: function () {\n            return utils_1.isObject(this.error) ? tslib_1.__assign(tslib_1.__assign({}, this.error), { responseType: 'error' }) : this.error;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ResponseMiddleware.prototype, \"getRaw\", {\n        get: function () {\n            return tslib_1.__assign(tslib_1.__assign({}, this.raw), { responseType: 'raw' });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ResponseMiddleware.prototype.getResponseType = function () {\n        if (this.error) {\n            return 'error';\n        }\n        else if (this.result || (this.result === null && this.result !== undefined)) {\n            return 'result';\n        }\n        else {\n            return 'raw';\n        }\n    };\n    ResponseMiddleware.prototype.isError = function () {\n        return this.responseType === 'error';\n    };\n    ResponseMiddleware.prototype.isResult = function () {\n        return this.responseType === 'result';\n    };\n    ResponseMiddleware.prototype.isRaw = function () {\n        return this.responseType === 'raw';\n    };\n    return ResponseMiddleware;\n}());\nexports.ResponseMiddleware = ResponseMiddleware;\n//# sourceMappingURL=responseMiddleware.js.map"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-contract\n * @hidden\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isPayable = exports.isConstant = exports.abiMapper = void 0;\n\nvar utils_1 = require(\"@harmony-js/utils\");\n\nvar AbiItemModel_1 = require(\"../models/AbiItemModel\");\n\nvar AbiModel_1 = require(\"../models/AbiModel\");\n\nvar utils_2 = require(\"../abi/utils\");\n\nexports.abiMapper = function (abi, abiCoder) {\n  var mappedAbiItems = {\n    methods: {},\n    events: {},\n    fallback: undefined,\n    receive: undefined\n  };\n  var hasConstructor = false;\n  abi.forEach(function (abiItem) {\n    abiItem.constant = exports.isConstant(abiItem);\n    abiItem.payable = exports.isPayable(abiItem);\n\n    if (abiItem.name) {\n      abiItem.funcName = utils_2.jsonInterfaceMethodToString(abiItem);\n    }\n\n    var abiItemModel;\n\n    if (abiItem.type === 'function') {\n      abiItem.signature = abiCoder.encodeFunctionSignature(abiItem.funcName);\n      abiItemModel = new AbiItemModel_1.AbiItem(abiItem); // Check if an method already exists with this name and if it exists than create an array and push this abiItem\n      // into it. This will be used if there are methods with the same name but with different arguments.\n\n      if (!mappedAbiItems.methods[abiItem.name]) {\n        mappedAbiItems.methods[abiItem.name] = abiItemModel;\n      } else {\n        if (utils_1.isArray(mappedAbiItems.methods[abiItem.name])) {\n          mappedAbiItems.methods[abiItem.name].push(abiItemModel);\n        } else {\n          mappedAbiItems.methods[abiItem.name] = [mappedAbiItems.methods[abiItem.name], abiItemModel];\n        }\n      }\n\n      mappedAbiItems.methods[abiItem.signature] = abiItemModel;\n      mappedAbiItems.methods[abiItem.funcName] = abiItemModel;\n      return;\n    }\n\n    if (abiItem.type === 'event') {\n      abiItem.signature = abiCoder.encodeEventSignature(abiItem.funcName);\n      abiItemModel = new AbiItemModel_1.AbiItem(abiItem);\n\n      if (!mappedAbiItems.events[abiItem.name] || mappedAbiItems.events[abiItem.name].name === 'bound ') {\n        mappedAbiItems.events[abiItem.name] = abiItemModel;\n      }\n\n      mappedAbiItems.events[abiItem.signature] = abiItemModel;\n      mappedAbiItems.events[abiItem.funcName] = abiItemModel;\n    }\n\n    if (abiItem.type === 'fallback' || abiItem.type === 'receive') {\n      abiItem.signature = abiItem.type;\n      mappedAbiItems[abiItem.type] = new AbiItemModel_1.AbiItem(abiItem);\n    }\n\n    if (abiItem.type === 'constructor') {\n      abiItem.signature = abiItem.type; // tslint:disable-next-line: no-string-literal\n\n      mappedAbiItems.methods['contractConstructor'] = new AbiItemModel_1.AbiItem(abiItem);\n      hasConstructor = true;\n    }\n  });\n\n  if (!hasConstructor) {\n    // tslint:disable-next-line: no-string-literal\n    mappedAbiItems.methods['contractConstructor'] = new AbiItemModel_1.AbiItem({\n      inputs: [],\n      payable: false,\n      constant: false,\n      type: 'constructor'\n    });\n  }\n\n  return new AbiModel_1.AbiModel(mappedAbiItems);\n};\n\nexports.isConstant = function (abiItem) {\n  return abiItem.stateMutability === 'view' || abiItem.stateMutability === 'pure' || abiItem.constant;\n};\n\nexports.isPayable = function (abiItem) {\n  return abiItem.stateMutability === 'payable' || abiItem.payable;\n};","map":{"version":3,"sources":["../../src/utils/mapper.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-contract\n * @hidden\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isPayable = exports.isConstant = exports.abiMapper = void 0;\nvar utils_1 = require(\"@harmony-js/utils\");\nvar AbiItemModel_1 = require(\"../models/AbiItemModel\");\nvar AbiModel_1 = require(\"../models/AbiModel\");\nvar utils_2 = require(\"../abi/utils\");\nexports.abiMapper = function (abi, abiCoder) {\n    var mappedAbiItems = {\n        methods: {},\n        events: {},\n        fallback: undefined,\n        receive: undefined,\n    };\n    var hasConstructor = false;\n    abi.forEach(function (abiItem) {\n        abiItem.constant = exports.isConstant(abiItem);\n        abiItem.payable = exports.isPayable(abiItem);\n        if (abiItem.name) {\n            abiItem.funcName = utils_2.jsonInterfaceMethodToString(abiItem);\n        }\n        var abiItemModel;\n        if (abiItem.type === 'function') {\n            abiItem.signature = abiCoder.encodeFunctionSignature(abiItem.funcName);\n            abiItemModel = new AbiItemModel_1.AbiItem(abiItem);\n            // Check if an method already exists with this name and if it exists than create an array and push this abiItem\n            // into it. This will be used if there are methods with the same name but with different arguments.\n            if (!mappedAbiItems.methods[abiItem.name]) {\n                mappedAbiItems.methods[abiItem.name] = abiItemModel;\n            }\n            else {\n                if (utils_1.isArray(mappedAbiItems.methods[abiItem.name])) {\n                    mappedAbiItems.methods[abiItem.name].push(abiItemModel);\n                }\n                else {\n                    mappedAbiItems.methods[abiItem.name] = [\n                        mappedAbiItems.methods[abiItem.name],\n                        abiItemModel,\n                    ];\n                }\n            }\n            mappedAbiItems.methods[abiItem.signature] = abiItemModel;\n            mappedAbiItems.methods[abiItem.funcName] = abiItemModel;\n            return;\n        }\n        if (abiItem.type === 'event') {\n            abiItem.signature = abiCoder.encodeEventSignature(abiItem.funcName);\n            abiItemModel = new AbiItemModel_1.AbiItem(abiItem);\n            if (!mappedAbiItems.events[abiItem.name] ||\n                mappedAbiItems.events[abiItem.name].name === 'bound ') {\n                mappedAbiItems.events[abiItem.name] = abiItemModel;\n            }\n            mappedAbiItems.events[abiItem.signature] = abiItemModel;\n            mappedAbiItems.events[abiItem.funcName] = abiItemModel;\n        }\n        if (abiItem.type === 'fallback' || abiItem.type === 'receive') {\n            abiItem.signature = abiItem.type;\n            mappedAbiItems[abiItem.type] = new AbiItemModel_1.AbiItem(abiItem);\n        }\n        if (abiItem.type === 'constructor') {\n            abiItem.signature = abiItem.type;\n            // tslint:disable-next-line: no-string-literal\n            mappedAbiItems.methods['contractConstructor'] = new AbiItemModel_1.AbiItem(abiItem);\n            hasConstructor = true;\n        }\n    });\n    if (!hasConstructor) {\n        // tslint:disable-next-line: no-string-literal\n        mappedAbiItems.methods['contractConstructor'] = new AbiItemModel_1.AbiItem({\n            inputs: [],\n            payable: false,\n            constant: false,\n            type: 'constructor',\n        });\n    }\n    return new AbiModel_1.AbiModel(mappedAbiItems);\n};\nexports.isConstant = function (abiItem) {\n    return (abiItem.stateMutability === 'view' || abiItem.stateMutability === 'pure' || abiItem.constant);\n};\nexports.isPayable = function (abiItem) {\n    return abiItem.stateMutability === 'payable' || abiItem.payable;\n};\n//# sourceMappingURL=mapper.js.map"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-contract\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EventMethod = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar network_1 = require(\"@harmony-js/network\");\n\nvar decoder_1 = require(\"../utils/decoder\");\n\nvar formatter_1 = require(\"../utils/formatter\");\n\nvar EventMethod = function (_super) {\n  tslib_1.__extends(EventMethod, _super);\n\n  function EventMethod(methodKey, params, abiItem, contract) {\n    var _this = _super.call(this, formatter_1.inputLogFormatter(params), contract.wallet.messenger, contract.shardID) || this;\n\n    _this.methodKey = methodKey;\n    _this.contract = contract;\n    _this.params = params;\n    _this.abiItem = abiItem;\n    return _this; // this.subscribe();\n  } // call() {}\n  // estimateGas() {}\n  // encodeABI() {}\n\n\n  EventMethod.prototype.onNewSubscriptionItem = function (subscriptionItem) {\n    var formatted = formatter_1.outputLogFormatter(subscriptionItem.method !== undefined ? subscriptionItem.params.result : subscriptionItem);\n    var log = decoder_1.decode(this.contract.abiCoder, this.abiItem, formatted);\n\n    if (log.removed && this.emitter) {\n      this.emitter.emit('changed', log);\n    }\n\n    return log;\n  };\n\n  return EventMethod;\n}(network_1.LogSub);\n\nexports.EventMethod = EventMethod;","map":{"version":3,"sources":["../../src/events/event.ts"],"names":[],"mappings":";AAAA;;;AAGG;;;;;;;;;AAEH,IAAA,SAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AAGA,IAAA,SAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AACA,IAAA,WAAA,GAAA,UAAA,MAAA,EAAA;AAAiC,EAAA,OAAA,CAAA,SAAA,CAAA,WAAA,EAAA,MAAA;;AAK/B,WAAA,WAAA,CAAY,SAAZ,EAA+B,MAA/B,EAA4C,OAA5C,EAAmE,QAAnE,EAAqF;AAArF,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,WAAA,CAAA,iBAAA,CAAkB,MAAlB,CAAN,EAAiC,QAAQ,CAAC,MAAT,CAAgB,SAAjD,EAA4D,QAAQ,CAAC,OAArE,KAA6E,IAD/E;;AAEE,IAAA,KAAI,CAAC,SAAL,GAAiB,SAAjB;AACA,IAAA,KAAI,CAAC,QAAL,GAAgB,QAAhB;AACA,IAAA,KAAI,CAAC,MAAL,GAAc,MAAd;AACA,IAAA,KAAI,CAAC,OAAL,GAAe,OAAf;iBALmF,CAMnF;AACD,GAZH,CAcE;AACA;AACA;;;AAEA,EAAA,WAAA,CAAA,SAAA,CAAA,qBAAA,GAAA,UAAsB,gBAAtB,EAA2C;AACzC,QAAM,SAAS,GAAG,WAAA,CAAA,kBAAA,CAChB,gBAAgB,CAAC,MAAjB,KAA4B,SAA5B,GAAwC,gBAAgB,CAAC,MAAjB,CAAwB,MAAhE,GAAyE,gBADzD,CAAlB;AAGA,QAAM,GAAG,GAAG,SAAA,CAAA,MAAA,CAAgB,KAAK,QAAL,CAAc,QAA9B,EAAwC,KAAK,OAA7C,EAAsD,SAAtD,CAAZ;;AAEA,QAAI,GAAG,CAAC,OAAJ,IAAe,KAAK,OAAxB,EAAiC;AAC/B,WAAK,OAAL,CAAa,IAAb,CAAkB,SAAlB,EAA6B,GAA7B;AACD;;AAED,WAAO,GAAP;AACD,GAXD;;AAYF,SAAA,WAAA;AAAC,CA9BD,CAAiC,SAAA,CAAA,MAAjC,CAAA;;AAAa,OAAA,CAAA,WAAA,GAAA,WAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-contract\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventMethod = void 0;\nvar tslib_1 = require(\"tslib\");\nvar network_1 = require(\"@harmony-js/network\");\nvar decoder_1 = require(\"../utils/decoder\");\nvar formatter_1 = require(\"../utils/formatter\");\nvar EventMethod = /** @class */ (function (_super) {\n    tslib_1.__extends(EventMethod, _super);\n    function EventMethod(methodKey, params, abiItem, contract) {\n        var _this = _super.call(this, formatter_1.inputLogFormatter(params), contract.wallet.messenger, contract.shardID) || this;\n        _this.methodKey = methodKey;\n        _this.contract = contract;\n        _this.params = params;\n        _this.abiItem = abiItem;\n        return _this;\n        // this.subscribe();\n    }\n    // call() {}\n    // estimateGas() {}\n    // encodeABI() {}\n    EventMethod.prototype.onNewSubscriptionItem = function (subscriptionItem) {\n        var formatted = formatter_1.outputLogFormatter(subscriptionItem.method !== undefined ? subscriptionItem.params.result : subscriptionItem);\n        var log = decoder_1.decode(this.contract.abiCoder, this.abiItem, formatted);\n        if (log.removed && this.emitter) {\n            this.emitter.emit('changed', log);\n        }\n        return log;\n    };\n    return EventMethod;\n}(network_1.LogSub));\nexports.EventMethod = EventMethod;\n//# sourceMappingURL=event.js.map"]},"metadata":{},"sourceType":"script"}
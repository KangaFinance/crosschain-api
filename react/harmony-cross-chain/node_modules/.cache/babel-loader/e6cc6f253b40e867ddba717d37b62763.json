{"ast":null,"code":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-contract\n *\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Contract = void 0;\n\nvar account_1 = require(\"@harmony-js/account\");\n\nvar index_1 = require(\"./abi/index\");\n\nvar mapper_1 = require(\"./utils/mapper\");\n\nvar methodFactory_1 = require(\"./methods/methodFactory\");\n\nvar eventFactory_1 = require(\"./events/eventFactory\");\n\nvar status_1 = require(\"./utils/status\"); // class Contract\n\n\nvar Contract = function () {\n  function Contract(abi, address, options, wallet, status) {\n    if (abi === void 0) {\n      abi = [];\n    }\n\n    if (address === void 0) {\n      address = '0x';\n    }\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (status === void 0) {\n      status = status_1.ContractStatus.INITIALISED;\n    }\n\n    this.fallback = undefined;\n    this.receive = undefined;\n    this.abi = [];\n    this.errorFunc = 'Error(string)'; // super();\n\n    this.abi = abi;\n    this.abiCoder = index_1.AbiCoder();\n    this.abiModel = mapper_1.abiMapper(abi, this.abiCoder);\n    this.options = options;\n    this.address = this.options.address || address;\n    this.shardID = this.options.shardID || wallet.messenger.currentShard;\n    this.wallet = wallet;\n    this.methods = {};\n    this.events = {};\n    this.runMethodFactory();\n    this.runEventFactory();\n    this.status = status;\n    this.errorFuncSig = this.abiCoder.encodeFunctionSignature(this.errorFunc); // tslint:disable-next-line: no-unused-expression\n  }\n\n  Contract.prototype.isInitialised = function () {\n    return this.status === status_1.ContractStatus.INITIALISED;\n  };\n\n  Contract.prototype.isSigned = function () {\n    return this.status === status_1.ContractStatus.SIGNED;\n  };\n\n  Contract.prototype.isSent = function () {\n    return this.status === status_1.ContractStatus.SENT;\n  };\n\n  Contract.prototype.isDeployed = function () {\n    return this.status === status_1.ContractStatus.DEPLOYED;\n  };\n\n  Contract.prototype.isRejected = function () {\n    return this.status === status_1.ContractStatus.REJECTED;\n  };\n\n  Contract.prototype.isCalled = function () {\n    return this.status === status_1.ContractStatus.CALLED;\n  };\n\n  Contract.prototype.setStatus = function (status) {\n    this.status = status;\n  };\n\n  Object.defineProperty(Contract.prototype, \"jsonInterface\", {\n    get: function () {\n      return this.abiModel;\n    },\n    set: function (value) {\n      this.abiModel = mapper_1.abiMapper(value, this.abiCoder);\n      this.runMethodFactory();\n      this.runEventFactory();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Contract.prototype, \"address\", {\n    get: function () {\n      return this.options.address || this.address;\n    },\n    set: function (value) {\n      this.options.address = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Contract.prototype, \"data\", {\n    get: function () {\n      return this.options.data;\n    },\n    set: function (value) {\n      this.options.data = value;\n    },\n    enumerable: false,\n    configurable: true\n  }); // deploy\n\n  Contract.prototype.deploy = function (options) {\n    return this.methods.contractConstructor(options);\n  };\n\n  Contract.prototype.runMethodFactory = function () {\n    return new methodFactory_1.MethodFactory(this).addMethodsToContract();\n  };\n\n  Contract.prototype.runEventFactory = function () {\n    return new eventFactory_1.EventFactory(this).addEventsToContract();\n  };\n\n  Contract.prototype.connect = function (wallet) {\n    this.wallet = wallet;\n  };\n\n  Contract.prototype.setMessegner = function (messenger) {\n    if (this.wallet instanceof account_1.Wallet) {\n      this.wallet.setMessenger(messenger);\n    } else {\n      this.wallet.messenger = messenger;\n    }\n  };\n\n  return Contract;\n}();\n\nexports.Contract = Contract;","map":{"version":3,"sources":["../src/contract.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-contract\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Contract = void 0;\nvar account_1 = require(\"@harmony-js/account\");\nvar index_1 = require(\"./abi/index\");\nvar mapper_1 = require(\"./utils/mapper\");\nvar methodFactory_1 = require(\"./methods/methodFactory\");\nvar eventFactory_1 = require(\"./events/eventFactory\");\nvar status_1 = require(\"./utils/status\");\n// class Contract\nvar Contract = /** @class */ (function () {\n    function Contract(abi, address, options, wallet, status) {\n        if (abi === void 0) { abi = []; }\n        if (address === void 0) { address = '0x'; }\n        if (options === void 0) { options = {}; }\n        if (status === void 0) { status = status_1.ContractStatus.INITIALISED; }\n        this.fallback = undefined;\n        this.receive = undefined;\n        this.abi = [];\n        this.errorFunc = 'Error(string)';\n        // super();\n        this.abi = abi;\n        this.abiCoder = index_1.AbiCoder();\n        this.abiModel = mapper_1.abiMapper(abi, this.abiCoder);\n        this.options = options;\n        this.address = this.options.address || address;\n        this.shardID = this.options.shardID || wallet.messenger.currentShard;\n        this.wallet = wallet;\n        this.methods = {};\n        this.events = {};\n        this.runMethodFactory();\n        this.runEventFactory();\n        this.status = status;\n        this.errorFuncSig = this.abiCoder.encodeFunctionSignature(this.errorFunc);\n        // tslint:disable-next-line: no-unused-expression\n    }\n    Contract.prototype.isInitialised = function () {\n        return this.status === status_1.ContractStatus.INITIALISED;\n    };\n    Contract.prototype.isSigned = function () {\n        return this.status === status_1.ContractStatus.SIGNED;\n    };\n    Contract.prototype.isSent = function () {\n        return this.status === status_1.ContractStatus.SENT;\n    };\n    Contract.prototype.isDeployed = function () {\n        return this.status === status_1.ContractStatus.DEPLOYED;\n    };\n    Contract.prototype.isRejected = function () {\n        return this.status === status_1.ContractStatus.REJECTED;\n    };\n    Contract.prototype.isCalled = function () {\n        return this.status === status_1.ContractStatus.CALLED;\n    };\n    Contract.prototype.setStatus = function (status) {\n        this.status = status;\n    };\n    Object.defineProperty(Contract.prototype, \"jsonInterface\", {\n        get: function () {\n            return this.abiModel;\n        },\n        set: function (value) {\n            this.abiModel = mapper_1.abiMapper(value, this.abiCoder);\n            this.runMethodFactory();\n            this.runEventFactory();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Contract.prototype, \"address\", {\n        get: function () {\n            return this.options.address || this.address;\n        },\n        set: function (value) {\n            this.options.address = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Contract.prototype, \"data\", {\n        get: function () {\n            return this.options.data;\n        },\n        set: function (value) {\n            this.options.data = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // deploy\n    Contract.prototype.deploy = function (options) {\n        return this.methods.contractConstructor(options);\n    };\n    Contract.prototype.runMethodFactory = function () {\n        return new methodFactory_1.MethodFactory(this).addMethodsToContract();\n    };\n    Contract.prototype.runEventFactory = function () {\n        return new eventFactory_1.EventFactory(this).addEventsToContract();\n    };\n    Contract.prototype.connect = function (wallet) {\n        this.wallet = wallet;\n    };\n    Contract.prototype.setMessegner = function (messenger) {\n        if (this.wallet instanceof account_1.Wallet) {\n            this.wallet.setMessenger(messenger);\n        }\n        else {\n            this.wallet.messenger = messenger;\n        }\n    };\n    return Contract;\n}());\nexports.Contract = Contract;\n//# sourceMappingURL=contract.js.map"]},"metadata":{},"sourceType":"script"}
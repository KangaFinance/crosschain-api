{"ast":null,"code":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-network\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SubscriptionMethod = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar rpc_1 = require(\"../rpcMethod/rpc\");\n\nvar ws_1 = require(\"../providers/ws\");\n\nvar SubscriptionMethod = function (_super) {\n  tslib_1.__extends(SubscriptionMethod, _super);\n\n  function SubscriptionMethod(param, options, messenger, shardID) {\n    if (shardID === void 0) {\n      shardID = 0;\n    }\n\n    var _this = _super.call(this, shardID !== 0 ? messenger.getShardProvider(shardID).url : messenger.provider.url) || this;\n\n    _this.subscriptionId = null;\n    _this.shardID = shardID;\n    _this.param = param;\n    _this.options = options;\n    _this.messenger = messenger;\n    return _this;\n  }\n\n  SubscriptionMethod.prototype.constructPayload = function (method, param, options) {\n    var rpcMethod = method;\n    var payload = [];\n    payload.push(param);\n\n    if (options) {\n      payload.push(options);\n    }\n\n    rpcMethod = this.messenger.setRPCPrefix(method, this.messenger.chainPrefix);\n    return this.jsonRpc.toPayload(rpcMethod, payload);\n  };\n\n  SubscriptionMethod.prototype.start = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var subscribePayload, id_1, error_1;\n\n      var _this = this;\n\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            subscribePayload = this.constructPayload(rpc_1.RPCMethod.Subscribe, this.param, this.options);\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , _super.prototype.subscribe.call(this, subscribePayload)];\n\n          case 2:\n            id_1 = _a.sent();\n            this.subscriptionId = id_1;\n            this.on(id_1, function (result) {\n              var output = _this.onNewSubscriptionItem(result);\n\n              _this.emitter.emit('data', output);\n            });\n            this.once('error', function (error) {\n              _this.removeEventListener(id_1);\n\n              _this.emitter.emit('error', error);\n\n              _this.removeEventListener('*');\n            });\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            error_1 = _a.sent();\n            this.emitter.emit('error', error_1);\n            this.removeEventListener('*');\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            , this];\n        }\n      });\n    });\n  };\n\n  SubscriptionMethod.prototype.unsubscribe = function () {\n    var unsubscribePayload = this.constructPayload(rpc_1.RPCMethod.UnSubscribe, this.subscriptionId);\n    return _super.prototype.unsubscribe.call(this, unsubscribePayload);\n  };\n\n  SubscriptionMethod.prototype.onNewSubscriptionItem = function (subscriptionItem) {\n    return subscriptionItem;\n  };\n\n  return SubscriptionMethod;\n}(ws_1.WSProvider);\n\nexports.SubscriptionMethod = SubscriptionMethod;","map":{"version":3,"sources":["../../src/subscriptions/Subscription.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-network\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SubscriptionMethod = void 0;\nvar tslib_1 = require(\"tslib\");\nvar rpc_1 = require(\"../rpcMethod/rpc\");\nvar ws_1 = require(\"../providers/ws\");\nvar SubscriptionMethod = /** @class */ (function (_super) {\n    tslib_1.__extends(SubscriptionMethod, _super);\n    function SubscriptionMethod(param, options, messenger, shardID) {\n        if (shardID === void 0) { shardID = 0; }\n        var _this = _super.call(this, shardID !== 0 ? messenger.getShardProvider(shardID).url : messenger.provider.url) || this;\n        _this.subscriptionId = null;\n        _this.shardID = shardID;\n        _this.param = param;\n        _this.options = options;\n        _this.messenger = messenger;\n        return _this;\n    }\n    SubscriptionMethod.prototype.constructPayload = function (method, param, options) {\n        var rpcMethod = method;\n        var payload = [];\n        payload.push(param);\n        if (options) {\n            payload.push(options);\n        }\n        rpcMethod = this.messenger.setRPCPrefix(method, this.messenger.chainPrefix);\n        return this.jsonRpc.toPayload(rpcMethod, payload);\n    };\n    SubscriptionMethod.prototype.start = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var subscribePayload, id_1, error_1;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        subscribePayload = this.constructPayload(rpc_1.RPCMethod.Subscribe, this.param, this.options);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, _super.prototype.subscribe.call(this, subscribePayload)];\n                    case 2:\n                        id_1 = _a.sent();\n                        this.subscriptionId = id_1;\n                        this.on(id_1, function (result) {\n                            var output = _this.onNewSubscriptionItem(result);\n                            _this.emitter.emit('data', output);\n                        });\n                        this.once('error', function (error) {\n                            _this.removeEventListener(id_1);\n                            _this.emitter.emit('error', error);\n                            _this.removeEventListener('*');\n                        });\n                        return [3 /*break*/, 4];\n                    case 3:\n                        error_1 = _a.sent();\n                        this.emitter.emit('error', error_1);\n                        this.removeEventListener('*');\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/, this];\n                }\n            });\n        });\n    };\n    SubscriptionMethod.prototype.unsubscribe = function () {\n        var unsubscribePayload = this.constructPayload(rpc_1.RPCMethod.UnSubscribe, this.subscriptionId);\n        return _super.prototype.unsubscribe.call(this, unsubscribePayload);\n    };\n    SubscriptionMethod.prototype.onNewSubscriptionItem = function (subscriptionItem) {\n        return subscriptionItem;\n    };\n    return SubscriptionMethod;\n}(ws_1.WSProvider));\nexports.SubscriptionMethod = SubscriptionMethod;\n//# sourceMappingURL=Subscription.js.map"]},"metadata":{},"sourceType":"script"}
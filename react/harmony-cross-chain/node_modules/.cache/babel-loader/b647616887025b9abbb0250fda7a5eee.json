{"ast":null,"code":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-contract\n * @hidden\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MethodFactory = void 0;\n\nvar method_1 = require(\"./method\");\n\nvar MethodFactory = function () {\n  // constructor\n  function MethodFactory(contract) {\n    this.contract = contract;\n    this.abiModel = this.contract.abiModel;\n    this.abiCoder = this.contract.abiCoder;\n    this.methodKeys = this.mapMethodKeys();\n  }\n\n  MethodFactory.prototype.addMethodsToContract = function () {\n    var _this = this;\n\n    this.methodKeys.forEach(function (key) {\n      var newObject = {};\n\n      newObject[key] = function () {\n        var params = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          params[_i] = arguments[_i];\n        }\n\n        return new method_1.ContractMethod(key, params, _this.abiModel.getMethod(key), _this.contract);\n      };\n\n      Object.assign(_this.contract.methods, newObject);\n    });\n\n    if (this.abiModel.hasFallback()) {\n      this.contract.fallback = function (calldata) {\n        return new method_1.ContractMethod('fallback', [calldata], _this.abiModel.getFallback(), _this.contract);\n      };\n    }\n\n    if (this.abiModel.hasReceive()) {\n      this.contract.receive = function () {\n        return new method_1.ContractMethod('receive', [], _this.abiModel.getReceive(), _this.contract);\n      };\n    }\n\n    return this.contract;\n  };\n  /**\n   * @function mapMethodKeys\n   * @return {string[]} {description}\n   */\n\n\n  MethodFactory.prototype.mapMethodKeys = function () {\n    return Object.keys(this.abiModel.abi.methods);\n  };\n\n  return MethodFactory;\n}();\n\nexports.MethodFactory = MethodFactory;","map":{"version":3,"sources":["../../src/methods/methodFactory.ts"],"names":[],"mappings":";AAAA;;;;AAIG;;;;;;;AAKH,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAEA,IAAA,aAAA,GAAA,YAAA;AAME;AACA,WAAA,aAAA,CAAY,QAAZ,EAA8B;AAC5B,SAAK,QAAL,GAAgB,QAAhB;AACA,SAAK,QAAL,GAAgB,KAAK,QAAL,CAAc,QAA9B;AACA,SAAK,QAAL,GAAgB,KAAK,QAAL,CAAc,QAA9B;AACA,SAAK,UAAL,GAAkB,KAAK,aAAL,EAAlB;AACD;;AAED,EAAA,aAAA,CAAA,SAAA,CAAA,oBAAA,GAAA,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACE,SAAK,UAAL,CAAgB,OAAhB,CAAwB,UAAC,GAAD,EAAY;AAClC,UAAM,SAAS,GAAQ,EAAvB;;AACA,MAAA,SAAS,CAAC,GAAD,CAAT,GAAiB,YAAA;AAAC,YAAA,MAAA,GAAA,EAAA;;aAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAgB;AAAhB,UAAA,MAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAChB,eAAA,IAAI,QAAA,CAAA,cAAJ,CAAmB,GAAnB,EAAwB,MAAxB,EAAgC,KAAI,CAAC,QAAL,CAAc,SAAd,CAAwB,GAAxB,CAAhC,EAA8D,KAAI,CAAC,QAAnE,CAAA;AAA4E,OAD9E;;AAGA,MAAA,MAAM,CAAC,MAAP,CAAc,KAAI,CAAC,QAAL,CAAc,OAA5B,EAAqC,SAArC;AACD,KAND;;AAOA,QAAI,KAAK,QAAL,CAAc,WAAd,EAAJ,EAAiC;AAC/B,WAAK,QAAL,CAAc,QAAd,GAAyB,UAAC,QAAD,EAAiB;AACxC,eAAA,IAAI,QAAA,CAAA,cAAJ,CAAmB,UAAnB,EAA+B,CAAC,QAAD,CAA/B,EAA2C,KAAI,CAAC,QAAL,CAAc,WAAd,EAA3C,EAAwE,KAAI,CAAC,QAA7E,CAAA;AAAsF,OADxF;AAED;;AACD,QAAI,KAAK,QAAL,CAAc,UAAd,EAAJ,EAAgC;AAC9B,WAAK,QAAL,CAAc,OAAd,GAAwB,YAAA;AACtB,eAAA,IAAI,QAAA,CAAA,cAAJ,CAAmB,SAAnB,EAA8B,EAA9B,EAAkC,KAAI,CAAC,QAAL,CAAc,UAAd,EAAlC,EAA8D,KAAI,CAAC,QAAnE,CAAA;AAA4E,OAD9E;AAED;;AACD,WAAO,KAAK,QAAZ;AACD,GAjBD;AAkBA;;;AAGG;;;AACK,EAAA,aAAA,CAAA,SAAA,CAAA,aAAA,GAAR,YAAA;AACE,WAAO,MAAM,CAAC,IAAP,CAAY,KAAK,QAAL,CAAc,GAAd,CAAkB,OAA9B,CAAP;AACD,GAFO;;AAGV,SAAA,aAAA;AAAC,CAvCD,EAAA;;AAAa,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-contract\n * @hidden\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MethodFactory = void 0;\nvar method_1 = require(\"./method\");\nvar MethodFactory = /** @class */ (function () {\n    // constructor\n    function MethodFactory(contract) {\n        this.contract = contract;\n        this.abiModel = this.contract.abiModel;\n        this.abiCoder = this.contract.abiCoder;\n        this.methodKeys = this.mapMethodKeys();\n    }\n    MethodFactory.prototype.addMethodsToContract = function () {\n        var _this = this;\n        this.methodKeys.forEach(function (key) {\n            var newObject = {};\n            newObject[key] = function () {\n                var params = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    params[_i] = arguments[_i];\n                }\n                return new method_1.ContractMethod(key, params, _this.abiModel.getMethod(key), _this.contract);\n            };\n            Object.assign(_this.contract.methods, newObject);\n        });\n        if (this.abiModel.hasFallback()) {\n            this.contract.fallback = function (calldata) {\n                return new method_1.ContractMethod('fallback', [calldata], _this.abiModel.getFallback(), _this.contract);\n            };\n        }\n        if (this.abiModel.hasReceive()) {\n            this.contract.receive = function () {\n                return new method_1.ContractMethod('receive', [], _this.abiModel.getReceive(), _this.contract);\n            };\n        }\n        return this.contract;\n    };\n    /**\n     * @function mapMethodKeys\n     * @return {string[]} {description}\n     */\n    MethodFactory.prototype.mapMethodKeys = function () {\n        return Object.keys(this.abiModel.abi.methods);\n    };\n    return MethodFactory;\n}());\nexports.MethodFactory = MethodFactory;\n//# sourceMappingURL=methodFactory.js.map"]},"metadata":{},"sourceType":"script"}
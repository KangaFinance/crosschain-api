{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HmyMethodsDepositWeb3 = void 0;\n\nconst utils_1 = require(\"../utils\");\n\nconst HmyMethodsWeb3_1 = require(\"./HmyMethodsWeb3\");\n\nconst BN = require('bn.js');\n\nclass HmyMethodsDepositWeb3 extends HmyMethodsWeb3_1.HmyMethodsWeb3 {\n  constructor() {\n    super(...arguments);\n\n    this.deposit = async (amount, sendTxCallback) => {\n      let accounts;\n\n      if (this.useMetamask) {\n        accounts = await ethereum.enable();\n      }\n\n      const res = await this.hmyManagerContract.methods.deposit(utils_1.withDecimals(amount, 18)).send({\n        from: accounts[0],\n        gasLimit: process.env.GAS_LIMIT,\n        gasPrice: new BN(await this.web3.eth.getGasPrice()).mul(new BN(1)),\n        value: utils_1.withDecimals(amount, 18)\n      }).on('transactionHash', sendTxCallback);\n      return res;\n    };\n  }\n\n}\n\nexports.HmyMethodsDepositWeb3 = HmyMethodsDepositWeb3;","map":{"version":3,"sources":["/Users/borispolania/Documents/GitHub/crosschain-api/react/harmony-cross-chain/node_modules/bridge-sdk/lib/blockchain/hmy/HmyMethodsDepositWeb3.js"],"names":["Object","defineProperty","exports","value","HmyMethodsDepositWeb3","utils_1","require","HmyMethodsWeb3_1","BN","HmyMethodsWeb3","constructor","arguments","deposit","amount","sendTxCallback","accounts","useMetamask","ethereum","enable","res","hmyManagerContract","methods","withDecimals","send","from","gasLimit","process","env","GAS_LIMIT","gasPrice","web3","eth","getGasPrice","mul","on"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,qBAAR,GAAgC,KAAK,CAArC;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,kBAAD,CAAhC;;AACA,MAAME,EAAE,GAAGF,OAAO,CAAC,OAAD,CAAlB;;AACA,MAAMF,qBAAN,SAAoCG,gBAAgB,CAACE,cAArD,CAAoE;AAChEC,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGC,SAAT;;AACA,SAAKC,OAAL,GAAe,OAAOC,MAAP,EAAeC,cAAf,KAAkC;AAC7C,UAAIC,QAAJ;;AACA,UAAI,KAAKC,WAAT,EAAsB;AAClBD,QAAAA,QAAQ,GAAG,MAAME,QAAQ,CAACC,MAAT,EAAjB;AACH;;AACD,YAAMC,GAAG,GAAG,MAAM,KAAKC,kBAAL,CAAwBC,OAAxB,CACbT,OADa,CACLP,OAAO,CAACiB,YAAR,CAAqBT,MAArB,EAA6B,EAA7B,CADK,EAEbU,IAFa,CAER;AACNC,QAAAA,IAAI,EAAET,QAAQ,CAAC,CAAD,CADR;AAENU,QAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,SAFhB;AAGNC,QAAAA,QAAQ,EAAE,IAAIrB,EAAJ,CAAO,MAAM,KAAKsB,IAAL,CAAUC,GAAV,CAAcC,WAAd,EAAb,EAA0CC,GAA1C,CAA8C,IAAIzB,EAAJ,CAAO,CAAP,CAA9C,CAHJ;AAINL,QAAAA,KAAK,EAAEE,OAAO,CAACiB,YAAR,CAAqBT,MAArB,EAA6B,EAA7B;AAJD,OAFQ,EAQbqB,EARa,CAQV,iBARU,EAQSpB,cART,CAAlB;AASA,aAAOK,GAAP;AACH,KAfD;AAgBH;;AAnB+D;;AAqBpEjB,OAAO,CAACE,qBAAR,GAAgCA,qBAAhC","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HmyMethodsDepositWeb3 = void 0;\nconst utils_1 = require(\"../utils\");\nconst HmyMethodsWeb3_1 = require(\"./HmyMethodsWeb3\");\nconst BN = require('bn.js');\nclass HmyMethodsDepositWeb3 extends HmyMethodsWeb3_1.HmyMethodsWeb3 {\n    constructor() {\n        super(...arguments);\n        this.deposit = async (amount, sendTxCallback) => {\n            let accounts;\n            if (this.useMetamask) {\n                accounts = await ethereum.enable();\n            }\n            const res = await this.hmyManagerContract.methods\n                .deposit(utils_1.withDecimals(amount, 18))\n                .send({\n                from: accounts[0],\n                gasLimit: process.env.GAS_LIMIT,\n                gasPrice: new BN(await this.web3.eth.getGasPrice()).mul(new BN(1)),\n                value: utils_1.withDecimals(amount, 18),\n            })\n                .on('transactionHash', sendTxCallback);\n            return res;\n        };\n    }\n}\nexports.HmyMethodsDepositWeb3 = HmyMethodsDepositWeb3;\n"]},"metadata":{},"sourceType":"script"}
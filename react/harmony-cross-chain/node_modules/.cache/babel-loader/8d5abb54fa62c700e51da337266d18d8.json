{"ast":null,"code":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-network\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WSProvider = void 0;\n\nvar tslib_1 = require(\"tslib\"); // TODO: implement Websocket Provider\n\n\nvar websocket_1 = require(\"websocket\");\n\nvar baseSocket_1 = require(\"./baseSocket\");\n\nvar utils_1 = require(\"@harmony-js/utils\");\n\nvar builder_1 = require(\"../rpcMethod/builder\");\n\nvar net_1 = require(\"../rpcMethod/net\");\n\nvar WSProvider = function (_super) {\n  tslib_1.__extends(WSProvider, _super); // ws: w3cwebsocket;\n\n\n  function WSProvider(url, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _this = _super.call(this, url) || this;\n\n    if (!utils_1.isWs(url)) {\n      throw new Error(url + \" is not websocket\");\n    }\n\n    _this.url = url;\n    _this.options = options;\n    _this.connection = _this.createWebsocketProvider(_this.url, _this.options);\n    _this.jsonRpc = new builder_1.JsonRpc();\n    _this.subscriptions = {};\n\n    _this.registerEventListeners();\n\n    return _this; // this.on = this.emitter.on.bind(this);\n  }\n\n  Object.defineProperty(WSProvider.prototype, \"connected\", {\n    get: function () {\n      return this.connection.readyState === this.connection.OPEN;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  WSProvider.prototype.on = function (type, handler) {\n    this.emitter.on(type, handler);\n    return this;\n  };\n\n  WSProvider.prototype.onData = function (handler) {\n    this.emitter.on('data', handler);\n    return this;\n  };\n\n  WSProvider.prototype.onError = function (event) {\n    if (event.code === 'ECONNREFUSED') {\n      this.reconnect();\n      return;\n    }\n\n    _super.prototype.onError.call(this, event);\n  };\n\n  WSProvider.prototype.onClose = function (closeEvent) {\n    if (closeEvent.code !== 1000 || closeEvent.wasClean === false) {\n      this.reconnect();\n      return;\n    }\n\n    _super.prototype.onClose.call(this);\n  };\n\n  WSProvider.prototype.createWebsocketProvider = function (url, options) {\n    if (options === void 0) {\n      options = {};\n    } // tslint:disable-next-line: no-string-literal\n\n\n    if (typeof window !== 'undefined' && window.WebSocket) {\n      // tslint:disable-next-line: no-string-literal\n      return new WebSocket(url, options.protocol);\n    } else {\n      var headers_1 = options.headers || {};\n      var urlObject = new URL(url);\n\n      if (!headers_1.authorization && urlObject.username && urlObject.password) {\n        var authToken = Buffer.from(urlObject.username + \":\" + urlObject.password).toString('base64');\n        headers_1.authorization = \"Basic \" + authToken;\n      }\n\n      return new websocket_1.w3cwebsocket(url, options.protocol, undefined, headers_1, undefined, options.clientConfig);\n    }\n  };\n\n  WSProvider.prototype.reconnect = function () {\n    var _this = this;\n\n    setTimeout(function () {\n      _this.removeAllSocketListeners();\n\n      _this.connection = _this.createWebsocketProvider(_this.url, _this.options);\n\n      _this.registerEventListeners();\n    }, 5000);\n  };\n\n  WSProvider.prototype.isConnecting = function () {\n    return this.connection.readyState === this.connection.CONNECTING;\n  };\n\n  WSProvider.prototype.send = function (payload) {\n    var _this = this;\n\n    var _a = tslib_1.__read(this.getMiddleware(payload.method), 2),\n        tReq = _a[0],\n        tRes = _a[1];\n\n    var reqMiddleware = net_1.composeMiddleware.apply(void 0, tslib_1.__spread(tReq));\n    var resMiddleware = net_1.composeMiddleware.apply(void 0, tslib_1.__spread(tRes));\n    return new Promise(function (resolve, reject) {\n      // TODO: test on Error\n      if (_this.connected) {\n        try {\n          _this.connection.send(reqMiddleware(JSON.stringify(payload)));\n        } catch (error) {\n          // TODO !isConnecting then reconnect?\n          _this.removeEventListener(baseSocket_1.SocketConnection.ERROR);\n\n          throw error;\n        }\n      }\n\n      _this.emitter.on(baseSocket_1.SocketConnection.CONNECT, function () {\n        try {\n          _this.connection.send(reqMiddleware(JSON.stringify(payload)));\n        } catch (error) {\n          // TODO !isConnecting then reconnect?\n          _this.removeEventListener(baseSocket_1.SocketConnection.ERROR);\n\n          throw error;\n        }\n      });\n\n      _this.emitter.on(\"\" + payload.id, function (data) {\n        resolve(resMiddleware(data));\n\n        _this.removeEventListener(\"\" + payload.id);\n      });\n\n      _this.emitter.on(baseSocket_1.SocketConnection.ERROR, reject);\n    });\n  };\n\n  WSProvider.prototype.subscribe = function (payload) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var response, responseValidateResult;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.send(payload)];\n\n          case 1:\n            response = _a.sent();\n            responseValidateResult = this.validate(response);\n\n            if (responseValidateResult instanceof Error) {\n              throw responseValidateResult;\n            }\n\n            this.subscriptions[response.result] = {\n              id: response.result,\n              subscribeMethod: payload.method,\n              parameters: payload.params,\n              payload: payload\n            };\n            return [2\n            /*return*/\n            , response.result];\n        }\n      });\n    });\n  };\n\n  WSProvider.prototype.unsubscribe = function (payload) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var subscriptionId;\n\n      var _this = this;\n\n      return tslib_1.__generator(this, function (_a) {\n        subscriptionId = payload.params[0];\n\n        if (this.hasSubscription(subscriptionId)) {\n          return [2\n          /*return*/\n          , this.send(payload).then(function (response) {\n            if (response) {\n              _this.removeEventListener(_this.getSubscriptionEvent(subscriptionId));\n\n              delete _this.subscriptions[subscriptionId];\n            }\n\n            return response;\n          })];\n        }\n\n        return [2\n        /*return*/\n        , Promise.reject(new Error(\"Provider error: Subscription with ID \" + subscriptionId + \" does not exist.\"))];\n      });\n    });\n  };\n\n  WSProvider.prototype.clearSubscriptions = function (unsubscribeMethod) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var unsubscribePromises, results;\n\n      var _this = this;\n\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            unsubscribePromises = [];\n            Object.keys(this.subscriptions).forEach(function (key) {\n              _this.removeEventListener(key);\n\n              unsubscribePromises.push(_this.unsubscribe(_this.jsonRpc.toPayload(unsubscribeMethod, _this.subscriptions[key].id)));\n            });\n            return [4\n            /*yield*/\n            , Promise.all(unsubscribePromises)];\n\n          case 1:\n            results = _a.sent();\n\n            if (results.includes(false)) {\n              throw new Error(\"Could not unsubscribe all subscriptions: \" + JSON.stringify(results));\n            }\n\n            return [2\n            /*return*/\n            , true];\n        }\n      });\n    });\n  };\n\n  WSProvider.prototype.registerEventListeners = function () {\n    this.connection.onmessage = this.onMessage.bind(this);\n    this.connection.onopen = this.onReady.bind(this);\n    this.connection.onopen = this.onConnect.bind(this);\n    this.connection.onclose = this.onClose.bind(this);\n    this.connection.onerror = this.onError.bind(this);\n  };\n\n  WSProvider.prototype.onMessage = function (msg) {\n    if (msg && msg.data) {\n      var result = void 0;\n      var event_1;\n\n      try {\n        result = utils_1.isObject(msg.data) ? msg.data : JSON.parse(msg.data);\n\n        if (utils_1.isArray(result)) {\n          event_1 = result[0].id;\n        } // tslint:disable-next-line: prefer-conditional-expression\n\n\n        if (typeof result.id === 'undefined') {\n          event_1 = this.getSubscriptionEvent(result.params.subscription) || result.params.subscription; // result = result.params;\n        } else {\n          event_1 = result.id;\n        }\n      } catch (error) {\n        throw error;\n      }\n\n      this.emitter.emit(baseSocket_1.SocketState.SOCKET_MESSAGE, result);\n      this.emitter.emit(\"\" + event_1, result);\n    } else {\n      throw new Error('provider error');\n    }\n  };\n\n  WSProvider.prototype.onConnect = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var subscriptionKeys, subscriptionKeys_1, subscriptionKeys_1_1, key, subscriptionId, e_1_1;\n\n      var e_1, _a;\n\n      return tslib_1.__generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!this.subscriptions) {\n              this.subscriptions = {};\n            }\n\n            subscriptionKeys = Object.keys(this.subscriptions);\n            if (!(subscriptionKeys.length > 0)) return [3\n            /*break*/\n            , 8];\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1, 6, 7, 8]);\n\n            subscriptionKeys_1 = tslib_1.__values(subscriptionKeys), subscriptionKeys_1_1 = subscriptionKeys_1.next();\n            _b.label = 2;\n\n          case 2:\n            if (!!subscriptionKeys_1_1.done) return [3\n            /*break*/\n            , 5];\n            key = subscriptionKeys_1_1.value;\n            return [4\n            /*yield*/\n            , this.subscribe(this.subscriptions[key].payload)];\n\n          case 3:\n            subscriptionId = _b.sent();\n            delete this.subscriptions[subscriptionId];\n            this.subscriptions[key].id = subscriptionId;\n            _b.label = 4;\n\n          case 4:\n            subscriptionKeys_1_1 = subscriptionKeys_1.next();\n            return [3\n            /*break*/\n            , 2];\n\n          case 5:\n            return [3\n            /*break*/\n            , 8];\n\n          case 6:\n            e_1_1 = _b.sent();\n            e_1 = {\n              error: e_1_1\n            };\n            return [3\n            /*break*/\n            , 8];\n\n          case 7:\n            try {\n              if (subscriptionKeys_1_1 && !subscriptionKeys_1_1.done && (_a = subscriptionKeys_1.return)) _a.call(subscriptionKeys_1);\n            } finally {\n              if (e_1) throw e_1.error;\n            }\n\n            return [7\n            /*endfinally*/\n            ];\n\n          case 8:\n            this.emitter.emit(baseSocket_1.SocketState.SOCKET_CONNECT);\n            this.emitter.emit(baseSocket_1.SocketConnection.CONNECT);\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  WSProvider.prototype.getSubscriptionEvent = function (subscriptionId) {\n    var _this = this;\n\n    if (this.subscriptions[subscriptionId]) {\n      return subscriptionId;\n    }\n\n    var event;\n    Object.keys(this.subscriptions).forEach(function (key) {\n      if (_this.subscriptions[key].id === subscriptionId) {\n        event = key;\n      }\n    });\n    return event;\n  };\n\n  WSProvider.prototype.hasSubscription = function (subscriptionId) {\n    return typeof this.getSubscriptionEvent(subscriptionId) !== 'undefined';\n  };\n\n  WSProvider.prototype.validate = function (response, payload) {\n    if (utils_1.isObject(response)) {\n      if (response.error) {\n        if (response.error instanceof Error) {\n          return new Error(\"Node error: \" + response.error.message);\n        }\n\n        return new Error(\"Node error: \" + JSON.stringify(response.error));\n      }\n\n      if (payload && response.id !== payload.id) {\n        return new Error(\"Validation error: Invalid JSON-RPC response ID (request: \" + payload.id + \" / response: \" + response.id + \")\");\n      }\n\n      if (response.result === undefined) {\n        return new Error('Validation error: Undefined JSON-RPC result');\n      }\n\n      return true;\n    }\n\n    return new Error('Validation error: Response should be of type Object');\n  };\n\n  return WSProvider;\n}(baseSocket_1.BaseSocket);\n\nexports.WSProvider = WSProvider;","map":{"version":3,"sources":["../../src/providers/ws.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-network\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WSProvider = void 0;\nvar tslib_1 = require(\"tslib\");\n// TODO: implement Websocket Provider\nvar websocket_1 = require(\"websocket\");\nvar baseSocket_1 = require(\"./baseSocket\");\nvar utils_1 = require(\"@harmony-js/utils\");\nvar builder_1 = require(\"../rpcMethod/builder\");\nvar net_1 = require(\"../rpcMethod/net\");\nvar WSProvider = /** @class */ (function (_super) {\n    tslib_1.__extends(WSProvider, _super);\n    // ws: w3cwebsocket;\n    function WSProvider(url, options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, url) || this;\n        if (!utils_1.isWs(url)) {\n            throw new Error(url + \" is not websocket\");\n        }\n        _this.url = url;\n        _this.options = options;\n        _this.connection = _this.createWebsocketProvider(_this.url, _this.options);\n        _this.jsonRpc = new builder_1.JsonRpc();\n        _this.subscriptions = {};\n        _this.registerEventListeners();\n        return _this;\n        // this.on = this.emitter.on.bind(this);\n    }\n    Object.defineProperty(WSProvider.prototype, \"connected\", {\n        get: function () {\n            return this.connection.readyState === this.connection.OPEN;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WSProvider.prototype.on = function (type, handler) {\n        this.emitter.on(type, handler);\n        return this;\n    };\n    WSProvider.prototype.onData = function (handler) {\n        this.emitter.on('data', handler);\n        return this;\n    };\n    WSProvider.prototype.onError = function (event) {\n        if (event.code === 'ECONNREFUSED') {\n            this.reconnect();\n            return;\n        }\n        _super.prototype.onError.call(this, event);\n    };\n    WSProvider.prototype.onClose = function (closeEvent) {\n        if (closeEvent.code !== 1000 || closeEvent.wasClean === false) {\n            this.reconnect();\n            return;\n        }\n        _super.prototype.onClose.call(this);\n    };\n    WSProvider.prototype.createWebsocketProvider = function (url, options) {\n        if (options === void 0) { options = {}; }\n        // tslint:disable-next-line: no-string-literal\n        if (typeof window !== 'undefined' && window.WebSocket) {\n            // tslint:disable-next-line: no-string-literal\n            return new WebSocket(url, options.protocol);\n        }\n        else {\n            var headers_1 = options.headers || {};\n            var urlObject = new URL(url);\n            if (!headers_1.authorization && urlObject.username && urlObject.password) {\n                var authToken = Buffer.from(urlObject.username + \":\" + urlObject.password).toString('base64');\n                headers_1.authorization = \"Basic \" + authToken;\n            }\n            return new websocket_1.w3cwebsocket(url, options.protocol, undefined, headers_1, undefined, options.clientConfig);\n        }\n    };\n    WSProvider.prototype.reconnect = function () {\n        var _this = this;\n        setTimeout(function () {\n            _this.removeAllSocketListeners();\n            _this.connection = _this.createWebsocketProvider(_this.url, _this.options);\n            _this.registerEventListeners();\n        }, 5000);\n    };\n    WSProvider.prototype.isConnecting = function () {\n        return this.connection.readyState === this.connection.CONNECTING;\n    };\n    WSProvider.prototype.send = function (payload) {\n        var _this = this;\n        var _a = tslib_1.__read(this.getMiddleware(payload.method), 2), tReq = _a[0], tRes = _a[1];\n        var reqMiddleware = net_1.composeMiddleware.apply(void 0, tslib_1.__spread(tReq));\n        var resMiddleware = net_1.composeMiddleware.apply(void 0, tslib_1.__spread(tRes));\n        return new Promise(function (resolve, reject) {\n            // TODO: test on Error\n            if (_this.connected) {\n                try {\n                    _this.connection.send(reqMiddleware(JSON.stringify(payload)));\n                }\n                catch (error) {\n                    // TODO !isConnecting then reconnect?\n                    _this.removeEventListener(baseSocket_1.SocketConnection.ERROR);\n                    throw error;\n                }\n            }\n            _this.emitter.on(baseSocket_1.SocketConnection.CONNECT, function () {\n                try {\n                    _this.connection.send(reqMiddleware(JSON.stringify(payload)));\n                }\n                catch (error) {\n                    // TODO !isConnecting then reconnect?\n                    _this.removeEventListener(baseSocket_1.SocketConnection.ERROR);\n                    throw error;\n                }\n            });\n            _this.emitter.on(\"\" + payload.id, function (data) {\n                resolve(resMiddleware(data));\n                _this.removeEventListener(\"\" + payload.id);\n            });\n            _this.emitter.on(baseSocket_1.SocketConnection.ERROR, reject);\n        });\n    };\n    WSProvider.prototype.subscribe = function (payload) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var response, responseValidateResult;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.send(payload)];\n                    case 1:\n                        response = _a.sent();\n                        responseValidateResult = this.validate(response);\n                        if (responseValidateResult instanceof Error) {\n                            throw responseValidateResult;\n                        }\n                        this.subscriptions[response.result] = {\n                            id: response.result,\n                            subscribeMethod: payload.method,\n                            parameters: payload.params,\n                            payload: payload,\n                        };\n                        return [2 /*return*/, response.result];\n                }\n            });\n        });\n    };\n    WSProvider.prototype.unsubscribe = function (payload) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var subscriptionId;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                subscriptionId = payload.params[0];\n                if (this.hasSubscription(subscriptionId)) {\n                    return [2 /*return*/, this.send(payload).then(function (response) {\n                            if (response) {\n                                _this.removeEventListener(_this.getSubscriptionEvent(subscriptionId));\n                                delete _this.subscriptions[subscriptionId];\n                            }\n                            return response;\n                        })];\n                }\n                return [2 /*return*/, Promise.reject(new Error(\"Provider error: Subscription with ID \" + subscriptionId + \" does not exist.\"))];\n            });\n        });\n    };\n    WSProvider.prototype.clearSubscriptions = function (unsubscribeMethod) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var unsubscribePromises, results;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        unsubscribePromises = [];\n                        Object.keys(this.subscriptions).forEach(function (key) {\n                            _this.removeEventListener(key);\n                            unsubscribePromises.push(_this.unsubscribe(_this.jsonRpc.toPayload(unsubscribeMethod, _this.subscriptions[key].id)));\n                        });\n                        return [4 /*yield*/, Promise.all(unsubscribePromises)];\n                    case 1:\n                        results = _a.sent();\n                        if (results.includes(false)) {\n                            throw new Error(\"Could not unsubscribe all subscriptions: \" + JSON.stringify(results));\n                        }\n                        return [2 /*return*/, true];\n                }\n            });\n        });\n    };\n    WSProvider.prototype.registerEventListeners = function () {\n        this.connection.onmessage = this.onMessage.bind(this);\n        this.connection.onopen = this.onReady.bind(this);\n        this.connection.onopen = this.onConnect.bind(this);\n        this.connection.onclose = this.onClose.bind(this);\n        this.connection.onerror = this.onError.bind(this);\n    };\n    WSProvider.prototype.onMessage = function (msg) {\n        if (msg && msg.data) {\n            var result = void 0;\n            var event_1;\n            try {\n                result = utils_1.isObject(msg.data) ? msg.data : JSON.parse(msg.data);\n                if (utils_1.isArray(result)) {\n                    event_1 = result[0].id;\n                }\n                // tslint:disable-next-line: prefer-conditional-expression\n                if (typeof result.id === 'undefined') {\n                    event_1 =\n                        this.getSubscriptionEvent(result.params.subscription) || result.params.subscription;\n                    // result = result.params;\n                }\n                else {\n                    event_1 = result.id;\n                }\n            }\n            catch (error) {\n                throw error;\n            }\n            this.emitter.emit(baseSocket_1.SocketState.SOCKET_MESSAGE, result);\n            this.emitter.emit(\"\" + event_1, result);\n        }\n        else {\n            throw new Error('provider error');\n        }\n    };\n    WSProvider.prototype.onConnect = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var subscriptionKeys, subscriptionKeys_1, subscriptionKeys_1_1, key, subscriptionId, e_1_1;\n            var e_1, _a;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!this.subscriptions) {\n                            this.subscriptions = {};\n                        }\n                        subscriptionKeys = Object.keys(this.subscriptions);\n                        if (!(subscriptionKeys.length > 0)) return [3 /*break*/, 8];\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 6, 7, 8]);\n                        subscriptionKeys_1 = tslib_1.__values(subscriptionKeys), subscriptionKeys_1_1 = subscriptionKeys_1.next();\n                        _b.label = 2;\n                    case 2:\n                        if (!!subscriptionKeys_1_1.done) return [3 /*break*/, 5];\n                        key = subscriptionKeys_1_1.value;\n                        return [4 /*yield*/, this.subscribe(this.subscriptions[key].payload)];\n                    case 3:\n                        subscriptionId = _b.sent();\n                        delete this.subscriptions[subscriptionId];\n                        this.subscriptions[key].id = subscriptionId;\n                        _b.label = 4;\n                    case 4:\n                        subscriptionKeys_1_1 = subscriptionKeys_1.next();\n                        return [3 /*break*/, 2];\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        e_1_1 = _b.sent();\n                        e_1 = { error: e_1_1 };\n                        return [3 /*break*/, 8];\n                    case 7:\n                        try {\n                            if (subscriptionKeys_1_1 && !subscriptionKeys_1_1.done && (_a = subscriptionKeys_1.return)) _a.call(subscriptionKeys_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                        return [7 /*endfinally*/];\n                    case 8:\n                        this.emitter.emit(baseSocket_1.SocketState.SOCKET_CONNECT);\n                        this.emitter.emit(baseSocket_1.SocketConnection.CONNECT);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    WSProvider.prototype.getSubscriptionEvent = function (subscriptionId) {\n        var _this = this;\n        if (this.subscriptions[subscriptionId]) {\n            return subscriptionId;\n        }\n        var event;\n        Object.keys(this.subscriptions).forEach(function (key) {\n            if (_this.subscriptions[key].id === subscriptionId) {\n                event = key;\n            }\n        });\n        return event;\n    };\n    WSProvider.prototype.hasSubscription = function (subscriptionId) {\n        return typeof this.getSubscriptionEvent(subscriptionId) !== 'undefined';\n    };\n    WSProvider.prototype.validate = function (response, payload) {\n        if (utils_1.isObject(response)) {\n            if (response.error) {\n                if (response.error instanceof Error) {\n                    return new Error(\"Node error: \" + response.error.message);\n                }\n                return new Error(\"Node error: \" + JSON.stringify(response.error));\n            }\n            if (payload && response.id !== payload.id) {\n                return new Error(\"Validation error: Invalid JSON-RPC response ID (request: \" + payload.id + \" / response: \" + response.id + \")\");\n            }\n            if (response.result === undefined) {\n                return new Error('Validation error: Undefined JSON-RPC result');\n            }\n            return true;\n        }\n        return new Error('Validation error: Response should be of type Object');\n    };\n    return WSProvider;\n}(baseSocket_1.BaseSocket));\nexports.WSProvider = WSProvider;\n//# sourceMappingURL=ws.js.map"]},"metadata":{},"sourceType":"script"}
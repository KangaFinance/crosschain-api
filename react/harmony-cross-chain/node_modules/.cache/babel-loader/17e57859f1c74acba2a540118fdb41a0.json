{"ast":null,"code":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-core\n * @hidden\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TruffleProvider = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar utils_1 = require(\"@harmony-js/utils\");\n\nvar account_1 = require(\"@harmony-js/account\");\n\nvar crypto_1 = require(\"@harmony-js/crypto\");\n\nvar packageInfo = {\n  version: '1.0.0'\n};\n\nvar TruffleProvider = function (_super) {\n  tslib_1.__extends(TruffleProvider, _super);\n\n  function TruffleProvider(provider, hdOptions, chainOptions, transactionOptions) {\n    if (provider === void 0) {\n      provider = 'http://localhost:9500';\n    }\n\n    if (hdOptions === void 0) {\n      hdOptions = {\n        menmonic: undefined,\n        index: 0,\n        addressCount: 1\n      };\n    }\n\n    if (chainOptions === void 0) {\n      chainOptions = {\n        shardID: 0,\n        chainType: utils_1.ChainType.Harmony,\n        chainId: utils_1.ChainID.HmyLocal\n      };\n    }\n\n    if (transactionOptions === void 0) {\n      transactionOptions = {\n        gasLimit: '10000000',\n        gasPrice: '20000000000'\n      };\n    }\n\n    var _this = _super.call(this, provider, hdOptions.menmonic, hdOptions.index, hdOptions.addressCount, chainOptions.shardID, chainOptions.chainType, chainOptions.chainId, transactionOptions.gasLimit, transactionOptions.gasPrice) || this;\n\n    _this.resolveResult = function (response) {\n      var final = response.getRaw || response;\n      delete final.req;\n      delete final.responseType;\n      return final;\n    };\n\n    _this.resolveCallback = function (err, res, callback) {\n      try {\n        if (err) {\n          callback(err);\n        }\n\n        var response = _this.resolveResult(res);\n\n        callback(null, response);\n      } catch (error) {\n        throw error;\n      }\n    };\n\n    return _this;\n  }\n\n  TruffleProvider.prototype.send = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var _a, newArgs, id, params, newMethod, callback, _b, accounts, txObj, rawTxn, result, result, result, result;\n\n      var _this = this;\n\n      return tslib_1.__generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _a = this.resolveArgs.apply(this, tslib_1.__spread(args)), newArgs = _a.newArgs, id = _a.id, params = _a.params, newMethod = _a.newMethod, callback = _a.callback;\n            _b = newMethod;\n\n            switch (_b) {\n              case 'hmy_accounts':\n                return [3\n                /*break*/\n                , 1];\n\n              case 'hmy_sendTransaction':\n                return [3\n                /*break*/\n                , 2];\n\n              case 'hmy_getTransactionReceipt':\n                return [3\n                /*break*/\n                , 5];\n\n              case 'net_version':\n                return [3\n                /*break*/\n                , 7];\n\n              case 'web3_clientVersion':\n                return [3\n                /*break*/\n                , 8];\n\n              case 'hmy_getBlockByNumber':\n                return [3\n                /*break*/\n                , 9];\n            }\n\n            return [3\n            /*break*/\n            , 11];\n\n          case 1:\n            {\n              accounts = this.getAccounts();\n              callback(null, {\n                result: accounts,\n                id: id,\n                jsonrpc: '2.0'\n              });\n              return [2\n              /*return*/\n              , {\n                result: accounts,\n                id: id,\n                jsonrpc: '2.0'\n              }]; // break;\n            }\n            _c.label = 2;\n\n          case 2:\n            txObj = params[0];\n            return [4\n            /*yield*/\n            , this.signTransaction(txObj)];\n\n          case 3:\n            rawTxn = _c.sent();\n            return [4\n            /*yield*/\n            , this.provider.send({\n              id: id,\n              method: 'hmy_sendRawTransaction',\n              params: [rawTxn],\n              jsonrpc: '2.0'\n            }, function (err, res) {\n              return _this.resolveCallback(err, res, callback);\n            })];\n\n          case 4:\n            result = _c.sent();\n            return [2\n            /*return*/\n            , this.resolveResult(result)];\n\n          case 5:\n            return [4\n            /*yield*/\n            , this.provider.send({\n              id: id,\n              method: 'hmy_getTransactionReceipt',\n              params: [params[0]],\n              jsonrpc: '2.0'\n            }, function (err, res) {\n              try {\n                if (err) {\n                  callback(err);\n                }\n\n                var response = _this.resolveResult(res);\n\n                if (response.result !== null) {\n                  response.result.status = '0x1';\n                }\n\n                callback(null, response);\n              } catch (error) {\n                throw error;\n              }\n            })];\n\n          case 6:\n            result = _c.sent();\n            return [2\n            /*return*/\n            , this.resolveResult(result)];\n\n          case 7:\n            {\n              callback(null, {\n                result: String(this.messenger.chainId),\n                id: id,\n                jsonrpc: '2.0'\n              });\n              return [2\n              /*return*/\n              , {\n                result: String(this.messenger.chainId),\n                id: id,\n                jsonrpc: '2.0'\n              }];\n            }\n            _c.label = 8;\n\n          case 8:\n            {\n              callback(null, {\n                result: \"Harmony/\" + packageInfo.version + \"/@harmony-js\",\n                id: id,\n                jsonrpc: '2.0'\n              });\n              return [2\n              /*return*/\n              , {\n                result: \"Harmony/\" + packageInfo.version + \"/@harmony-js\",\n                id: id,\n                jsonrpc: '2.0'\n              }];\n            }\n            _c.label = 9;\n\n          case 9:\n            return [4\n            /*yield*/\n            , this.provider.send(newArgs, function (err, res) {\n              try {\n                if (err) {\n                  callback(err);\n                }\n\n                var response = _this.resolveResult(res);\n\n                if (response.error) {\n                  callback(response.error);\n                  return;\n                }\n\n                if (new utils_1.Unit(response.result.gasLimit).asWei().toWei().gt(new utils_1.Unit(_this.gasLimit).asWei().toWei())) {\n                  response.result.gasLimit = \"0x\" + new utils_1.Unit(_this.gasLimit).asWei().toWei().toString('hex');\n                }\n\n                if (utils_1.isBech32Address(response.result.miner)) {\n                  response.result.miner = crypto_1.fromBech32(response.result.miner, crypto_1.HRP);\n                }\n\n                callback(null, response);\n              } catch (error) {\n                throw error;\n              }\n            })];\n\n          case 10:\n            result = _c.sent();\n            return [2\n            /*return*/\n            , this.resolveResult(result)];\n\n          case 11:\n            return [4\n            /*yield*/\n            , this.provider.send(newArgs, function (err, res) {\n              return _this.resolveCallback(err, res, callback);\n            })];\n\n          case 12:\n            result = _c.sent();\n            return [2\n            /*return*/\n            , this.resolveResult(result)];\n        }\n      });\n    });\n  };\n\n  TruffleProvider.prototype.sendAsync = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return this.send.apply(this, tslib_1.__spread(args));\n  };\n\n  TruffleProvider.prototype.resolveArgs = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var method = args[0].method;\n    var params = args[0].params;\n    var newMethod = method;\n\n    if (method.startsWith('eth')) {\n      newMethod = method.replace('eth', 'hmy');\n    }\n\n    args[0].method = newMethod;\n    var id = args[0].id;\n    return {\n      newArgs: args[0],\n      id: id,\n      params: params,\n      newMethod: newMethod,\n      callback: args[1]\n    };\n  };\n\n  return TruffleProvider;\n}(account_1.HDNode);\n\nexports.TruffleProvider = TruffleProvider;","map":{"version":3,"sources":["../src/truffleProvider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-core\n * @hidden\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TruffleProvider = void 0;\nvar tslib_1 = require(\"tslib\");\nvar utils_1 = require(\"@harmony-js/utils\");\nvar account_1 = require(\"@harmony-js/account\");\nvar crypto_1 = require(\"@harmony-js/crypto\");\nvar packageInfo = { version: '1.0.0' };\nvar TruffleProvider = /** @class */ (function (_super) {\n    tslib_1.__extends(TruffleProvider, _super);\n    function TruffleProvider(provider, hdOptions, chainOptions, transactionOptions) {\n        if (provider === void 0) { provider = 'http://localhost:9500'; }\n        if (hdOptions === void 0) { hdOptions = {\n            menmonic: undefined,\n            index: 0,\n            addressCount: 1,\n        }; }\n        if (chainOptions === void 0) { chainOptions = {\n            shardID: 0,\n            chainType: utils_1.ChainType.Harmony,\n            chainId: utils_1.ChainID.HmyLocal,\n        }; }\n        if (transactionOptions === void 0) { transactionOptions = {\n            gasLimit: '10000000',\n            gasPrice: '20000000000',\n        }; }\n        var _this = _super.call(this, provider, hdOptions.menmonic, hdOptions.index, hdOptions.addressCount, chainOptions.shardID, chainOptions.chainType, chainOptions.chainId, transactionOptions.gasLimit, transactionOptions.gasPrice) || this;\n        _this.resolveResult = function (response) {\n            var final = response.getRaw || response;\n            delete final.req;\n            delete final.responseType;\n            return final;\n        };\n        _this.resolveCallback = function (err, res, callback) {\n            try {\n                if (err) {\n                    callback(err);\n                }\n                var response = _this.resolveResult(res);\n                callback(null, response);\n            }\n            catch (error) {\n                throw error;\n            }\n        };\n        return _this;\n    }\n    TruffleProvider.prototype.send = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a, newArgs, id, params, newMethod, callback, _b, accounts, txObj, rawTxn, result, result, result, result;\n            var _this = this;\n            return tslib_1.__generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = this.resolveArgs.apply(this, tslib_1.__spread(args)), newArgs = _a.newArgs, id = _a.id, params = _a.params, newMethod = _a.newMethod, callback = _a.callback;\n                        _b = newMethod;\n                        switch (_b) {\n                            case 'hmy_accounts': return [3 /*break*/, 1];\n                            case 'hmy_sendTransaction': return [3 /*break*/, 2];\n                            case 'hmy_getTransactionReceipt': return [3 /*break*/, 5];\n                            case 'net_version': return [3 /*break*/, 7];\n                            case 'web3_clientVersion': return [3 /*break*/, 8];\n                            case 'hmy_getBlockByNumber': return [3 /*break*/, 9];\n                        }\n                        return [3 /*break*/, 11];\n                    case 1:\n                        {\n                            accounts = this.getAccounts();\n                            callback(null, {\n                                result: accounts,\n                                id: id,\n                                jsonrpc: '2.0',\n                            });\n                            return [2 /*return*/, {\n                                    result: accounts,\n                                    id: id,\n                                    jsonrpc: '2.0',\n                                }];\n                            // break;\n                        }\n                        _c.label = 2;\n                    case 2:\n                        txObj = params[0];\n                        return [4 /*yield*/, this.signTransaction(txObj)];\n                    case 3:\n                        rawTxn = _c.sent();\n                        return [4 /*yield*/, this.provider.send({\n                                id: id,\n                                method: 'hmy_sendRawTransaction',\n                                params: [rawTxn],\n                                jsonrpc: '2.0',\n                            }, function (err, res) { return _this.resolveCallback(err, res, callback); })];\n                    case 4:\n                        result = _c.sent();\n                        return [2 /*return*/, this.resolveResult(result)];\n                    case 5: return [4 /*yield*/, this.provider.send({\n                            id: id,\n                            method: 'hmy_getTransactionReceipt',\n                            params: [params[0]],\n                            jsonrpc: '2.0',\n                        }, function (err, res) {\n                            try {\n                                if (err) {\n                                    callback(err);\n                                }\n                                var response = _this.resolveResult(res);\n                                if (response.result !== null) {\n                                    response.result.status = '0x1';\n                                }\n                                callback(null, response);\n                            }\n                            catch (error) {\n                                throw error;\n                            }\n                        })];\n                    case 6:\n                        result = _c.sent();\n                        return [2 /*return*/, this.resolveResult(result)];\n                    case 7:\n                        {\n                            callback(null, {\n                                result: String(this.messenger.chainId),\n                                id: id,\n                                jsonrpc: '2.0',\n                            });\n                            return [2 /*return*/, {\n                                    result: String(this.messenger.chainId),\n                                    id: id,\n                                    jsonrpc: '2.0',\n                                }];\n                        }\n                        _c.label = 8;\n                    case 8:\n                        {\n                            callback(null, {\n                                result: \"Harmony/\" + packageInfo.version + \"/@harmony-js\",\n                                id: id,\n                                jsonrpc: '2.0',\n                            });\n                            return [2 /*return*/, {\n                                    result: \"Harmony/\" + packageInfo.version + \"/@harmony-js\",\n                                    id: id,\n                                    jsonrpc: '2.0',\n                                }];\n                        }\n                        _c.label = 9;\n                    case 9: return [4 /*yield*/, this.provider.send(newArgs, function (err, res) {\n                            try {\n                                if (err) {\n                                    callback(err);\n                                }\n                                var response = _this.resolveResult(res);\n                                if (response.error) {\n                                    callback(response.error);\n                                    return;\n                                }\n                                if (new utils_1.Unit(response.result.gasLimit)\n                                    .asWei()\n                                    .toWei()\n                                    .gt(new utils_1.Unit(_this.gasLimit).asWei().toWei())) {\n                                    response.result.gasLimit = \"0x\" + new utils_1.Unit(_this.gasLimit)\n                                        .asWei()\n                                        .toWei()\n                                        .toString('hex');\n                                }\n                                if (utils_1.isBech32Address(response.result.miner)) {\n                                    response.result.miner = crypto_1.fromBech32(response.result.miner, crypto_1.HRP);\n                                }\n                                callback(null, response);\n                            }\n                            catch (error) {\n                                throw error;\n                            }\n                        })];\n                    case 10:\n                        result = _c.sent();\n                        return [2 /*return*/, this.resolveResult(result)];\n                    case 11: return [4 /*yield*/, this.provider.send(newArgs, function (err, res) { return _this.resolveCallback(err, res, callback); })];\n                    case 12:\n                        result = _c.sent();\n                        return [2 /*return*/, this.resolveResult(result)];\n                }\n            });\n        });\n    };\n    TruffleProvider.prototype.sendAsync = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return this.send.apply(this, tslib_1.__spread(args));\n    };\n    TruffleProvider.prototype.resolveArgs = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var method = args[0].method;\n        var params = args[0].params;\n        var newMethod = method;\n        if (method.startsWith('eth')) {\n            newMethod = method.replace('eth', 'hmy');\n        }\n        args[0].method = newMethod;\n        var id = args[0].id;\n        return {\n            newArgs: args[0],\n            id: id,\n            params: params,\n            newMethod: newMethod,\n            callback: args[1],\n        };\n    };\n    return TruffleProvider;\n}(account_1.HDNode));\nexports.TruffleProvider = TruffleProvider;\n//# sourceMappingURL=truffleProvider.js.map"]},"metadata":{},"sourceType":"script"}
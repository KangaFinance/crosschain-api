{"ast":null,"code":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-network\n * @hidden\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JsonRpc = void 0;\n\nvar tslib_1 = require(\"tslib\");\n/**\n * @class JsonRpc\n * @description json rpc instance\n * @return {JsonRpc} Json RPC instance\n */\n\n\nvar JsonRpc = function () {\n  function JsonRpc() {\n    var _this = this;\n    /**\n     * @function toPayload\n     * @memberof JsonRpc.prototype\n     * @description convert method and params to payload object\n     * @param  {String} method - RPC method\n     * @param  {Array<object>} params - params that send to RPC\n     * @return {Object} payload object\n     */\n\n\n    this.toPayload = function (method, params) {\n      // FIXME: error to be done by shared/errors\n      if (!method) {\n        throw new Error('jsonrpc method should be specified!');\n      } // advance message ID\n\n\n      _this.messageId += 1;\n      var sendParams = params === undefined ? [] : typeof params === 'string' ? [params] : tslib_1.__spread(params);\n      return {\n        jsonrpc: '2.0',\n        id: _this.messageId,\n        method: method,\n        params: sendParams\n      };\n    };\n    /**\n     * @var {Number} messageId\n     * @memberof JsonRpc.prototype\n     * @description message id, default 0\n     */\n\n\n    this.messageId = 0;\n  }\n\n  return JsonRpc;\n}();\n\nexports.JsonRpc = JsonRpc;","map":{"version":3,"sources":["../../src/rpcMethod/builder.ts"],"names":[],"mappings":";AAAA;;;;AAIG;;;;;;;;AAIH;;;;AAIG;;;AACH,IAAA,OAAA,GAAA,YAAA;AAEE,WAAA,OAAA,GAAA;AAAA,QAAA,KAAA,GAAA,IAAA;AASA;;;;;;;AAOG;;;AACH,SAAA,SAAA,GAAY,UACV,MADU,EAEV,MAFU,EAEwB;AAElC;AACA,UAAI,CAAC,MAAL,EAAa;AACX,cAAM,IAAI,KAAJ,CAAU,qCAAV,CAAN;AACD,OALiC,CAOlC;;;AACA,MAAA,KAAI,CAAC,SAAL,IAAkB,CAAlB;AAEA,UAAM,UAAU,GACd,MAAM,KAAK,SAAX,GAAuB,EAAvB,GAA4B,OAAO,MAAP,KAAkB,QAAlB,GAA6B,CAAC,MAAD,CAA7B,GAAuC,OAAA,CAAA,QAAA,CAAK,MAAL,CADrE;AAGA,aAAO;AACL,QAAA,OAAO,EAAE,KADJ;AAEL,QAAA,EAAE,EAAE,KAAI,CAAC,SAFJ;AAGL,QAAA,MAAM,EAAA,MAHD;AAIL,QAAA,MAAM,EAAE;AAJH,OAAP;AAMD,KArBD;AAhBE;;;;AAIG;;;AACH,SAAK,SAAL,GAAiB,CAAjB;AACD;;AAgCH,SAAA,OAAA;AAAC,CAzCD,EAAA;;AA2CS,OAAA,CAAA,OAAA,GAAA,OAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-network\n * @hidden\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpc = void 0;\nvar tslib_1 = require(\"tslib\");\n/**\n * @class JsonRpc\n * @description json rpc instance\n * @return {JsonRpc} Json RPC instance\n */\nvar JsonRpc = /** @class */ (function () {\n    function JsonRpc() {\n        var _this = this;\n        /**\n         * @function toPayload\n         * @memberof JsonRpc.prototype\n         * @description convert method and params to payload object\n         * @param  {String} method - RPC method\n         * @param  {Array<object>} params - params that send to RPC\n         * @return {Object} payload object\n         */\n        this.toPayload = function (method, params) {\n            // FIXME: error to be done by shared/errors\n            if (!method) {\n                throw new Error('jsonrpc method should be specified!');\n            }\n            // advance message ID\n            _this.messageId += 1;\n            var sendParams = params === undefined ? [] : typeof params === 'string' ? [params] : tslib_1.__spread(params);\n            return {\n                jsonrpc: '2.0',\n                id: _this.messageId,\n                method: method,\n                params: sendParams,\n            };\n        };\n        /**\n         * @var {Number} messageId\n         * @memberof JsonRpc.prototype\n         * @description message id, default 0\n         */\n        this.messageId = 0;\n    }\n    return JsonRpc;\n}());\nexports.JsonRpc = JsonRpc;\n//# sourceMappingURL=builder.js.map"]},"metadata":{},"sourceType":"script"}
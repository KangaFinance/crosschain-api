{"ast":null,"code":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-network\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Provider = exports.ProviderType = void 0;\n\nvar http_1 = require(\"./http\");\n\nvar ws_1 = require(\"./ws\");\n\nvar utils_1 = require(\"@harmony-js/utils\");\n\nvar ProviderType;\n\n(function (ProviderType) {\n  ProviderType[\"http\"] = \"http\";\n  ProviderType[\"ws\"] = \"ws\";\n})(ProviderType = exports.ProviderType || (exports.ProviderType = {}));\n\nvar Provider = function () {\n  function Provider(url) {\n    this.provider = this.onInitSetProvider(url);\n    this.providerType = this.getType(this.provider);\n  }\n\n  Provider.getProvider = function (provider) {\n    try {\n      this.getProvider(provider);\n      return new Provider(provider);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  Provider.prototype.onInitSetProvider = function (providerUrl) {\n    if (typeof providerUrl === 'string') {\n      return utils_1.isHttp(providerUrl) ? new http_1.HttpProvider(providerUrl) : utils_1.isWs(providerUrl) ? new ws_1.WSProvider(providerUrl) : new http_1.HttpProvider(utils_1.defaultConfig.Default.Chain_URL);\n    }\n\n    try {\n      var providerType = this.getType(providerUrl);\n\n      if (providerType === ProviderType.http || providerType === ProviderType.ws) {\n        return providerUrl;\n      } else {\n        throw new Error('cannot get provider type');\n      }\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  Provider.prototype.getType = function (provider) {\n    if (provider instanceof http_1.HttpProvider) {\n      return ProviderType.http;\n    }\n\n    if (provider instanceof ws_1.WSProvider) {\n      return ProviderType.ws;\n    }\n\n    throw new Error('provider is not correct');\n  };\n\n  return Provider;\n}();\n\nexports.Provider = Provider;","map":{"version":3,"sources":["../../src/providers/provider.ts"],"names":[],"mappings":";AAAA;;;AAGG;;;;;;;AAEH,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,IAAA,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AAEA,IAAY,YAAZ;;AAAA,CAAA,UAAY,YAAZ,EAAwB;AACtB,EAAA,YAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,YAAA,CAAA,IAAA,CAAA,GAAA,IAAA;AACD,CAHD,EAAY,YAAY,GAAZ,OAAA,CAAA,YAAA,KAAA,OAAA,CAAA,YAAA,GAAY,EAAZ,CAAZ;;AAKA,IAAA,QAAA,GAAA,YAAA;AAWE,WAAA,QAAA,CAAY,GAAZ,EAAmD;AACjD,SAAK,QAAL,GAAgB,KAAK,iBAAL,CAAuB,GAAvB,CAAhB;AACA,SAAK,YAAL,GAAoB,KAAK,OAAL,CAAa,KAAK,QAAlB,CAApB;AACD;;AAbM,EAAA,QAAA,CAAA,WAAA,GAAP,UAAmB,QAAnB,EAA+D;AAC7D,QAAI;AACF,WAAK,WAAL,CAAiB,QAAjB;AACA,aAAO,IAAI,QAAJ,CAAa,QAAb,CAAP;AACD,KAHD,CAGE,OAAO,KAAP,EAAc;AACd,YAAM,KAAN;AACD;AACF,GAPM;;AAcC,EAAA,QAAA,CAAA,SAAA,CAAA,iBAAA,GAAR,UACE,WADF,EACiD;AAE/C,QAAI,OAAO,WAAP,KAAuB,QAA3B,EAAqC;AACnC,aAAO,OAAA,CAAA,MAAA,CAAO,WAAP,IACH,IAAI,MAAA,CAAA,YAAJ,CAAiB,WAAjB,CADG,GAEH,OAAA,CAAA,IAAA,CAAK,WAAL,IACA,IAAI,IAAA,CAAA,UAAJ,CAAe,WAAf,CADA,GAEA,IAAI,MAAA,CAAA,YAAJ,CAAiB,OAAA,CAAA,aAAA,CAAc,OAAd,CAAsB,SAAvC,CAJJ;AAKD;;AACD,QAAI;AACF,UAAM,YAAY,GAAG,KAAK,OAAL,CAAa,WAAb,CAArB;;AACA,UAAI,YAAY,KAAK,YAAY,CAAC,IAA9B,IAAsC,YAAY,KAAK,YAAY,CAAC,EAAxE,EAA4E;AAC1E,eAAO,WAAP;AACD,OAFD,MAEO;AACL,cAAM,IAAI,KAAJ,CAAU,0BAAV,CAAN;AACD;AACF,KAPD,CAOE,OAAO,KAAP,EAAc;AACd,YAAM,KAAN;AACD;AACF,GApBO;;AAqBA,EAAA,QAAA,CAAA,SAAA,CAAA,OAAA,GAAR,UAAgB,QAAhB,EAAmD;AACjD,QAAI,QAAQ,YAAY,MAAA,CAAA,YAAxB,EAAsC;AACpC,aAAO,YAAY,CAAC,IAApB;AACD;;AACD,QAAI,QAAQ,YAAY,IAAA,CAAA,UAAxB,EAAoC;AAClC,aAAO,YAAY,CAAC,EAApB;AACD;;AACD,UAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;AACD,GARO;;AASV,SAAA,QAAA;AAAC,CA7CD,EAAA;;AAAa,OAAA,CAAA,QAAA,GAAA,QAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-network\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Provider = exports.ProviderType = void 0;\nvar http_1 = require(\"./http\");\nvar ws_1 = require(\"./ws\");\nvar utils_1 = require(\"@harmony-js/utils\");\nvar ProviderType;\n(function (ProviderType) {\n    ProviderType[\"http\"] = \"http\";\n    ProviderType[\"ws\"] = \"ws\";\n})(ProviderType = exports.ProviderType || (exports.ProviderType = {}));\nvar Provider = /** @class */ (function () {\n    function Provider(url) {\n        this.provider = this.onInitSetProvider(url);\n        this.providerType = this.getType(this.provider);\n    }\n    Provider.getProvider = function (provider) {\n        try {\n            this.getProvider(provider);\n            return new Provider(provider);\n        }\n        catch (error) {\n            throw error;\n        }\n    };\n    Provider.prototype.onInitSetProvider = function (providerUrl) {\n        if (typeof providerUrl === 'string') {\n            return utils_1.isHttp(providerUrl)\n                ? new http_1.HttpProvider(providerUrl)\n                : utils_1.isWs(providerUrl)\n                    ? new ws_1.WSProvider(providerUrl)\n                    : new http_1.HttpProvider(utils_1.defaultConfig.Default.Chain_URL);\n        }\n        try {\n            var providerType = this.getType(providerUrl);\n            if (providerType === ProviderType.http || providerType === ProviderType.ws) {\n                return providerUrl;\n            }\n            else {\n                throw new Error('cannot get provider type');\n            }\n        }\n        catch (error) {\n            throw error;\n        }\n    };\n    Provider.prototype.getType = function (provider) {\n        if (provider instanceof http_1.HttpProvider) {\n            return ProviderType.http;\n        }\n        if (provider instanceof ws_1.WSProvider) {\n            return ProviderType.ws;\n        }\n        throw new Error('provider is not correct');\n    };\n    return Provider;\n}());\nexports.Provider = Provider;\n//# sourceMappingURL=provider.js.map"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-network\n * @hidden\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BaseSocket = exports.EmittType = exports.SocketState = exports.SocketConnection = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar utils_1 = require(\"@harmony-js/utils\");\n\nvar mitt_1 = tslib_1.__importDefault(require(\"mitt\"));\n\nvar baseProvider_1 = require(\"./baseProvider\");\n\nvar SocketConnection;\n\n(function (SocketConnection) {\n  SocketConnection[\"READY\"] = \"ready\";\n  SocketConnection[\"CONNECT\"] = \"connect\";\n  SocketConnection[\"ERROR\"] = \"error\";\n  SocketConnection[\"CLOSE\"] = \"close\";\n})(SocketConnection = exports.SocketConnection || (exports.SocketConnection = {}));\n\nvar SocketState;\n\n(function (SocketState) {\n  SocketState[\"SOCKET_MESSAGE\"] = \"socket_message\";\n  SocketState[\"SOCKET_READY\"] = \"socket_ready\";\n  SocketState[\"SOCKET_CLOSE\"] = \"socket_close\";\n  SocketState[\"SOCKET_ERROR\"] = \"socket_error\";\n  SocketState[\"SOCKET_CONNECT\"] = \"socket_connect\";\n  SocketState[\"SOCKET_NETWORK_CHANGED\"] = \"socket_networkChanged\";\n  SocketState[\"SOCKET_ACCOUNTS_CHANGED\"] = \"socket_accountsChanged\";\n})(SocketState = exports.SocketState || (exports.SocketState = {}));\n\nvar EmittType;\n\n(function (EmittType) {\n  EmittType[\"INSTANCE\"] = \"instance\";\n  EmittType[\"PUBSUB\"] = \"pubsub\";\n})(EmittType = exports.EmittType || (exports.EmittType = {}));\n\nvar BaseSocket = function (_super) {\n  tslib_1.__extends(BaseSocket, _super);\n\n  function BaseSocket(url) {\n    var _this = _super.call(this, url) || this;\n\n    _this.handlers = {};\n\n    if (!utils_1.isWs(url)) {\n      throw new Error(url + \" is not websocket\");\n    }\n\n    _this.url = url;\n    _this.emitter = mitt_1.default(_this.handlers);\n    return _this;\n  }\n\n  BaseSocket.prototype.resetHandlers = function () {\n    // tslint:disable-next-line: forin\n    for (var i in this.handlers) {\n      delete this.handlers[i];\n    }\n  };\n\n  BaseSocket.prototype.once = function (type, handler) {\n    this.emitter.on(type, handler);\n    this.removeEventListener(type);\n  };\n\n  BaseSocket.prototype.addEventListener = function (type, handler) {\n    this.emitter.on(type, handler);\n  };\n\n  BaseSocket.prototype.removeEventListener = function (type, handler) {\n    if (!type) {\n      this.handlers = {};\n      return;\n    }\n\n    if (!handler) {\n      delete this.handlers[type];\n    } else {\n      return this.emitter.off(type, handler);\n    }\n  };\n\n  BaseSocket.prototype.reset = function () {\n    this.removeEventListener('*'); // this.registerEventListeners();\n  };\n\n  BaseSocket.prototype.removeAllSocketListeners = function () {\n    this.removeEventListener(SocketState.SOCKET_MESSAGE);\n    this.removeEventListener(SocketState.SOCKET_READY);\n    this.removeEventListener(SocketState.SOCKET_CLOSE);\n    this.removeEventListener(SocketState.SOCKET_ERROR);\n    this.removeEventListener(SocketState.SOCKET_CONNECT);\n  };\n\n  BaseSocket.prototype.onReady = function (event) {\n    this.emitter.emit(SocketConnection.READY, event);\n    this.emitter.emit(SocketState.SOCKET_READY, event);\n  };\n\n  BaseSocket.prototype.onError = function (error) {\n    this.emitter.emit(SocketConnection.ERROR, error);\n    this.emitter.emit(SocketState.SOCKET_ERROR, error);\n    this.removeAllSocketListeners();\n    this.removeEventListener('*');\n  };\n\n  BaseSocket.prototype.onClose = function (error) {\n    if (error === void 0) {\n      error = null;\n    }\n\n    this.emitter.emit(SocketConnection.CLOSE, error);\n    this.emitter.emit(SocketState.SOCKET_CLOSE, error);\n    this.removeAllSocketListeners();\n    this.removeEventListener('*');\n  };\n\n  return BaseSocket;\n}(baseProvider_1.BaseProvider);\n\nexports.BaseSocket = BaseSocket;","map":{"version":3,"sources":["../../src/providers/baseSocket.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-network\n * @hidden\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseSocket = exports.EmittType = exports.SocketState = exports.SocketConnection = void 0;\nvar tslib_1 = require(\"tslib\");\nvar utils_1 = require(\"@harmony-js/utils\");\nvar mitt_1 = tslib_1.__importDefault(require(\"mitt\"));\nvar baseProvider_1 = require(\"./baseProvider\");\nvar SocketConnection;\n(function (SocketConnection) {\n    SocketConnection[\"READY\"] = \"ready\";\n    SocketConnection[\"CONNECT\"] = \"connect\";\n    SocketConnection[\"ERROR\"] = \"error\";\n    SocketConnection[\"CLOSE\"] = \"close\";\n})(SocketConnection = exports.SocketConnection || (exports.SocketConnection = {}));\nvar SocketState;\n(function (SocketState) {\n    SocketState[\"SOCKET_MESSAGE\"] = \"socket_message\";\n    SocketState[\"SOCKET_READY\"] = \"socket_ready\";\n    SocketState[\"SOCKET_CLOSE\"] = \"socket_close\";\n    SocketState[\"SOCKET_ERROR\"] = \"socket_error\";\n    SocketState[\"SOCKET_CONNECT\"] = \"socket_connect\";\n    SocketState[\"SOCKET_NETWORK_CHANGED\"] = \"socket_networkChanged\";\n    SocketState[\"SOCKET_ACCOUNTS_CHANGED\"] = \"socket_accountsChanged\";\n})(SocketState = exports.SocketState || (exports.SocketState = {}));\nvar EmittType;\n(function (EmittType) {\n    EmittType[\"INSTANCE\"] = \"instance\";\n    EmittType[\"PUBSUB\"] = \"pubsub\";\n})(EmittType = exports.EmittType || (exports.EmittType = {}));\nvar BaseSocket = /** @class */ (function (_super) {\n    tslib_1.__extends(BaseSocket, _super);\n    function BaseSocket(url) {\n        var _this = _super.call(this, url) || this;\n        _this.handlers = {};\n        if (!utils_1.isWs(url)) {\n            throw new Error(url + \" is not websocket\");\n        }\n        _this.url = url;\n        _this.emitter = mitt_1.default(_this.handlers);\n        return _this;\n    }\n    BaseSocket.prototype.resetHandlers = function () {\n        // tslint:disable-next-line: forin\n        for (var i in this.handlers) {\n            delete this.handlers[i];\n        }\n    };\n    BaseSocket.prototype.once = function (type, handler) {\n        this.emitter.on(type, handler);\n        this.removeEventListener(type);\n    };\n    BaseSocket.prototype.addEventListener = function (type, handler) {\n        this.emitter.on(type, handler);\n    };\n    BaseSocket.prototype.removeEventListener = function (type, handler) {\n        if (!type) {\n            this.handlers = {};\n            return;\n        }\n        if (!handler) {\n            delete this.handlers[type];\n        }\n        else {\n            return this.emitter.off(type, handler);\n        }\n    };\n    BaseSocket.prototype.reset = function () {\n        this.removeEventListener('*');\n        // this.registerEventListeners();\n    };\n    BaseSocket.prototype.removeAllSocketListeners = function () {\n        this.removeEventListener(SocketState.SOCKET_MESSAGE);\n        this.removeEventListener(SocketState.SOCKET_READY);\n        this.removeEventListener(SocketState.SOCKET_CLOSE);\n        this.removeEventListener(SocketState.SOCKET_ERROR);\n        this.removeEventListener(SocketState.SOCKET_CONNECT);\n    };\n    BaseSocket.prototype.onReady = function (event) {\n        this.emitter.emit(SocketConnection.READY, event);\n        this.emitter.emit(SocketState.SOCKET_READY, event);\n    };\n    BaseSocket.prototype.onError = function (error) {\n        this.emitter.emit(SocketConnection.ERROR, error);\n        this.emitter.emit(SocketState.SOCKET_ERROR, error);\n        this.removeAllSocketListeners();\n        this.removeEventListener('*');\n    };\n    BaseSocket.prototype.onClose = function (error) {\n        if (error === void 0) { error = null; }\n        this.emitter.emit(SocketConnection.CLOSE, error);\n        this.emitter.emit(SocketState.SOCKET_CLOSE, error);\n        this.removeAllSocketListeners();\n        this.removeEventListener('*');\n    };\n    return BaseSocket;\n}(baseProvider_1.BaseProvider));\nexports.BaseSocket = BaseSocket;\n//# sourceMappingURL=baseSocket.js.map"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperationClass = void 0;\n\nconst index_1 = require(\"./index\");\n\nconst utils_1 = require(\"./utils\");\n\nclass OperationClass {\n  constructor(sdk) {\n    this.create = async params => {\n      this.operation = await this.sdk.api.createOperation(params);\n    };\n\n    this.getOperationId = () => this.operation.id;\n\n    this.restoreById = async id => {\n      this.operation = await this.sdk.api.getOperation(id);\n    };\n\n    this.confirmAction = async params => {\n      return await this.sdk.api.confirmAction(Object.assign(Object.assign({}, params), {\n        operationId: this.operation.id\n      }));\n    };\n\n    this.skipAction = async actionType => {\n      return await this.sdk.api.confirmAction({\n        actionType,\n        transactionHash: 'skip',\n        operationId: this.operation.id\n      });\n    };\n\n    this.waitOperationComplete = async () => {\n      return new Promise(async (res, reject) => {\n        try {\n          while (this.operation.status === index_1.STATUS.IN_PROGRESS || this.operation.status === index_1.STATUS.WAITING) {\n            this.operation = await this.sdk.api.getOperation(this.operation.id);\n            await utils_1.sleep(3000);\n          }\n\n          if (this.operation.status === index_1.STATUS.SUCCESS) {\n            res(this.operation);\n          } else {\n            reject('Operation status: ' + this.operation.status);\n          }\n        } catch (e) {\n          reject(e);\n        }\n      });\n    };\n\n    this.waitActionComplete = async actionType => {\n      return new Promise(async (res, reject) => {\n        try {\n          const getAction = () => this.operation.actions.find(a => a.type === actionType);\n\n          while (getAction().status === index_1.STATUS.IN_PROGRESS || getAction().status === index_1.STATUS.WAITING) {\n            this.operation = await this.sdk.api.getOperation(this.operation.id);\n            await utils_1.sleep(3000);\n          }\n\n          if (getAction().status === index_1.STATUS.SUCCESS) {\n            res(this.operation);\n          } else {\n            reject('Action status: ' + getAction().status);\n          }\n        } catch (e) {\n          reject(e);\n        }\n      });\n    };\n\n    this.sdk = sdk;\n  }\n\n}\n\nexports.OperationClass = OperationClass;","map":{"version":3,"sources":["/Users/borispolania/Documents/GitHub/crosschain-api/react/harmony-cross-chain/node_modules/bridge-sdk/lib/OperationClass.js"],"names":["Object","defineProperty","exports","value","OperationClass","index_1","require","utils_1","constructor","sdk","create","params","operation","api","createOperation","getOperationId","id","restoreById","getOperation","confirmAction","assign","operationId","skipAction","actionType","transactionHash","waitOperationComplete","Promise","res","reject","status","STATUS","IN_PROGRESS","WAITING","sleep","SUCCESS","e","waitActionComplete","getAction","actions","find","a","type"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OperationClass = void 0;\nconst index_1 = require(\"./index\");\nconst utils_1 = require(\"./utils\");\nclass OperationClass {\n    constructor(sdk) {\n        this.create = async (params) => {\n            this.operation = await this.sdk.api.createOperation(params);\n        };\n        this.getOperationId = () => this.operation.id;\n        this.restoreById = async (id) => {\n            this.operation = await this.sdk.api.getOperation(id);\n        };\n        this.confirmAction = async (params) => {\n            return await this.sdk.api.confirmAction(Object.assign(Object.assign({}, params), { operationId: this.operation.id }));\n        };\n        this.skipAction = async (actionType) => {\n            return await this.sdk.api.confirmAction({\n                actionType,\n                transactionHash: 'skip',\n                operationId: this.operation.id,\n            });\n        };\n        this.waitOperationComplete = async () => {\n            return new Promise(async (res, reject) => {\n                try {\n                    while (this.operation.status === index_1.STATUS.IN_PROGRESS ||\n                        this.operation.status === index_1.STATUS.WAITING) {\n                        this.operation = await this.sdk.api.getOperation(this.operation.id);\n                        await utils_1.sleep(3000);\n                    }\n                    if (this.operation.status === index_1.STATUS.SUCCESS) {\n                        res(this.operation);\n                    }\n                    else {\n                        reject('Operation status: ' + this.operation.status);\n                    }\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        };\n        this.waitActionComplete = async (actionType) => {\n            return new Promise(async (res, reject) => {\n                try {\n                    const getAction = () => this.operation.actions.find(a => a.type === actionType);\n                    while (getAction().status === index_1.STATUS.IN_PROGRESS || getAction().status === index_1.STATUS.WAITING) {\n                        this.operation = await this.sdk.api.getOperation(this.operation.id);\n                        await utils_1.sleep(3000);\n                    }\n                    if (getAction().status === index_1.STATUS.SUCCESS) {\n                        res(this.operation);\n                    }\n                    else {\n                        reject('Action status: ' + getAction().status);\n                    }\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        };\n        this.sdk = sdk;\n    }\n}\nexports.OperationClass = OperationClass;\n"]},"metadata":{},"sourceType":"script"}
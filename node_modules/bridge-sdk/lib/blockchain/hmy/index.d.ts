import { HmyMethods } from './HmyMethods';
import { HmyMethodsWeb3 } from './HmyMethodsWeb3';
import { HmyMethodsERC20 } from './HmyMethodsERC20';
import { HmyMethodsERC20Web3 } from './HmyMethodsERC20Web3';
import { HmyMethodsDepositWeb3 } from './HmyMethodsDepositWeb3';
import { HmyMethodsDeposit } from './HmyMethodsDeposit';
export declare type HmyMethodsCommon = HmyMethods | HmyMethodsWeb3;
export declare type HmyMethodsDepositCommon = HmyMethodsDeposit | HmyMethodsDepositWeb3;
export declare type HmyMethodsErc20Common = HmyMethodsERC20 | HmyMethodsERC20Web3;
export interface IHmyClient {
    hmyMethodsBUSD: HmyMethodsCommon;
    hmyMethodsLINK: HmyMethodsCommon;
    hmyMethodsDeposit: HmyMethodsDepositCommon;
    hmyMethodsERC20: HmyMethodsErc20Common;
    hmyMethodsERC721: HmyMethodsErc20Common;
    getHmyBalance: (addr: string) => Promise<string>;
    getBech32Address: (addr: string) => string;
    addWallet: (pk: string) => void;
    getUserAddress: () => string;
    setUseOneWallet: (value: boolean) => void;
    setUseMathWallet: (value: boolean) => void;
}
export interface IHmyClientParams {
    sdk?: 'harmony' | 'web3';
    nodeURL: string;
    chainId: number;
    contracts: {
        busd: string;
        link: string;
        busdManager: string;
        linkManager: string;
        erc20Manager: string;
        erc721Manager: string;
        depositManager: string;
    };
    gasLimit?: number;
    gasPrice?: number;
}
export declare const getHmyClient: (params: IHmyClientParams) => Promise<IHmyClient>;
